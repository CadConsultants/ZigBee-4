///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V7.51A/W32 for 8051               29/Nov/2013  12:48:12 /
// Copyright 2004-2009 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 /
//                          RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXA /
//                          S-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Component /
//                          s\hal\target\CC2530EB\hal_IR.c                    /
//    Command line       =  -f E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\ /
//                          C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\T /
//                          EXAS-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projec /
//                          ts\zstack\Samples\BeginApp\CC2530DB\..\..\..\Tool /
//                          s\CC2530DB\f8wEndev.cfg (-DCPU32MHZ               /
//                          -DROOT=__near_func -DBLINK_LEDS) -f               /
//                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 /
//                          RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXA /
//                          S-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\ /
//                          zstack\Samples\BeginApp\CC2530DB\..\..\..\Tools\C /
//                          C2530DB\f8wConfig.cfg (-DSECURE=0                 /
//                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                 /
//                          -DDEFAULT_CHANLIST=0x04000000                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          "-DCONST=const __code" -DGENERIC=__generic        /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 E:\C51RF-CC2530-PKÎÞÏßZIGB /
//                          EEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE20 /
//                          07_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC253 /
//                          0-2.2.0-1.3.0\Components\hal\target\CC2530EB\hal_ /
//                          IR.c -D ZIGBEEPRO -D NWK_AUTO_POLL -D ZTOOL_P1    /
//                          -D MT_TASK -D MT_SYS_FUNC -D MT_ZDO_FUNC -D       /
//                          LCD_SUPPORTED=DEBUG -D xPOWER_SAVING -D           /
//                          HAL_LCD=FALSE -D HAL_KEY=FALSE -D HAL_ADC=FALSE   /
//                          -D HAL_UART=FALSE -D HAL_SPI=FALSE -lC            /
//                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 /
//                          RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXA /
//                          S-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\ /
//                          zstack\Samples\BeginApp\CC2530DB\EndDeviceEB-Pro\ /
//                          List\ -lA E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì /
//                          ¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊ /
//                          Ô³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0 /
//                          \Projects\zstack\Samples\BeginApp\CC2530DB\EndDev /
//                          iceEB-Pro\List\ --diag_suppress Pe001,Pa010 -o    /
//                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 /
//                          RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXA /
//                          S-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\ /
//                          zstack\Samples\BeginApp\CC2530DB\EndDeviceEB-Pro\ /
//                          Obj\ -e --require_prototypes --debug              /
//                          --core=plain --dptr=16,1 --data_model=large       /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 8 -I E:\C51RF-CC2530-PKÎÞÏßZIGB /
//                          EEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE20 /
//                          07_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC253 /
//                          0-2.2.0-1.3.0\Projects\zstack\Samples\BeginApp\CC /
//                          2530DB\ -I E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½ /
//                          Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²â /
//                          ÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3. /
//                          0\Projects\zstack\Samples\BeginApp\CC2530DB\..\SO /
//                          URCE\ -I E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨ /
//                          V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ /
//                          ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\ /
//                          Projects\zstack\Samples\BeginApp\CC2530DB\..\..\. /
//                          .\ZMAIN\TI2530DB\ -I E:\C51RF-CC2530-PKÎÞÏßZIGBEE /
//                          ÍøÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007 /
//                          _PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530- /
//                          2.2.0-1.3.0\Projects\zstack\Samples\BeginApp\CC25 /
//                          30DB\..\..\..\..\..\COMPONENTS\MT\ -I             /
//                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 /
//                          RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXA /
//                          S-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\ /
//                          zstack\Samples\BeginApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\HAL\INCLUDE\ -I                         /
//                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 /
//                          RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXA /
//                          S-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\ /
//                          zstack\Samples\BeginApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\HAL\TARGET\CC2530EB\ -I                 /
//                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 /
//                          RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXA /
//                          S-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\ /
//                          zstack\Samples\BeginApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\OSAL\MCU\CCSOC\ -I                      /
//                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 /
//                          RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXA /
//                          S-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\ /
//                          zstack\Samples\BeginApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\OSAL\INCLUDE\ -I                        /
//                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 /
//                          RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXA /
//                          S-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\ /
//                          zstack\Samples\BeginApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\STACK\AF\ -I E:\C51RF-CC2530-PKÎÞÏßZIGB /
//                          EEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE20 /
//                          07_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC253 /
//                          0-2.2.0-1.3.0\Projects\zstack\Samples\BeginApp\CC /
//                          2530DB\..\..\..\..\..\COMPONENTS\STACK\NWK\ -I    /
//                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 /
//                          RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXA /
//                          S-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\ /
//                          zstack\Samples\BeginApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\STACK\SEC\ -I                           /
//                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 /
//                          RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXA /
//                          S-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\ /
//                          zstack\Samples\BeginApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\STACK\SAPI\ -I                          /
//                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 /
//                          RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXA /
//                          S-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\ /
//                          zstack\Samples\BeginApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\STACK\SYS\ -I                           /
//                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 /
//                          RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXA /
//                          S-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\ /
//                          zstack\Samples\BeginApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\STACK\ZDO\ -I                           /
//                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 /
//                          RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXA /
//                          S-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\ /
//                          zstack\Samples\BeginApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\ZMAC\F8W\ -I E:\C51RF-CC2530-PKÎÞÏßZIGB /
//                          EEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE20 /
//                          07_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC253 /
//                          0-2.2.0-1.3.0\Projects\zstack\Samples\BeginApp\CC /
//                          2530DB\..\..\..\..\..\COMPONENTS\ZMAC\ -I         /
//                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 /
//                          RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXA /
//                          S-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\ /
//                          zstack\Samples\BeginApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\SERVICES\SADDR\ -I                      /
//                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 /
//                          RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXA /
//                          S-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\ /
//                          zstack\Samples\BeginApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\SERVICES\SDATA\ -I                      /
//                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 /
//                          RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXA /
//                          S-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\ /
//                          zstack\Samples\BeginApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\MAC\INCLUDE\ -I                         /
//                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 /
//                          RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXA /
//                          S-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\ /
//                          zstack\Samples\BeginApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\MAC\HIGH_LEVEL\ -I                      /
//                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 /
//                          RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXA /
//                          S-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\ /
//                          zstack\Samples\BeginApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\MAC\LOW_LEVEL\srf04\ -I                 /
//                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 /
//                          RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXA /
//                          S-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\ /
//                          zstack\Samples\BeginApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\MAC\LOW_LEVEL\srf04\SINGLE_CHIP\ -I     /
//                          "C:\Program Files\IAR Systems\Embedded Workbench  /
//                          5.3 Evaluation version\8051\INC\" -I "C:\Program  /
//                          Files\IAR Systems\Embedded Workbench 5.3          /
//                          Evaluation version\8051\INC\CLIB\" -Ohz           /
//    List file          =  E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 /
//                          RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXA /
//                          S-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\ /
//                          zstack\Samples\BeginApp\CC2530DB\EndDeviceEB-Pro\ /
//                          List\hal_IR.s51                                   /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME hal_IR

        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ??Hal_IR_RCVD_Int_Config?relay
        EXTERN ??Hal_IR_RCVD_T1_Config?relay
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?INTERRUPT_ENTER_XSP
        EXTERN ?INTERRUPT_LEAVE_XSP
        EXTERN __INIT_XDATA_Z

        PUBLIC ??Hal_IR_RCVD_Init?relay
        FUNCTION ??Hal_IR_RCVD_Init?relay,0203H
        PUBLIC ??Hal_IR_RCVD_Int_Config?relay
        FUNCTION ??Hal_IR_RCVD_Int_Config?relay,0203H
        PUBLIC ??Hal_IR_RCVD_T1_Config?relay
        FUNCTION ??Hal_IR_RCVD_T1_Config?relay,0203H
        PUBLIC ??UartTX_Send_String?relay
        FUNCTION ??UartTX_Send_String?relay,0203H
        PUBWEAK `??hal_IR_RCVD_Isr??INTVEC 107`
        PUBLIC ??initUARTtest?relay
        FUNCTION ??initUARTtest?relay,0203H
        PUBLIC Hal_IR_RCVD_Init
        FUNCTION Hal_IR_RCVD_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC Hal_IR_RCVD_IntEnable
        PUBLIC Hal_IR_RCVD_Int_Config
        FUNCTION Hal_IR_RCVD_Int_Config,0203H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC Hal_IR_RCVD_T1_Config
        FUNCTION Hal_IR_RCVD_T1_Config,0203H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUBWEAK P0DIR
        PUBWEAK P0IEN
        PUBWEAK P0IFG
        PUBWEAK P0INP
        PUBWEAK P0SEL
        PUBWEAK P2INP
        PUBWEAK PERCFG
        PUBWEAK PICTL
        PUBWEAK T1CC0H
        PUBWEAK T1CC0L
        PUBWEAK T1CCTL0
        PUBWEAK T1CNTH
        PUBWEAK T1CNTL
        PUBWEAK T1CTL
        PUBWEAK T1STAT
        PUBWEAK U0BAUD
        PUBWEAK U0CSR
        PUBWEAK U0DBUF
        PUBWEAK U0GCR
        PUBLIC UartTX_Send_String
        FUNCTION UartTX_Send_String,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBWEAK _A_IEN0
        PUBWEAK _A_IEN1
        PUBWEAK _A_IRCON
        PUBWEAK _A_IRCON2
        PUBWEAK _A_P1
        PUBWEAK _A_TIMIF
        PUBLIC hal_IR_RCVD_Isr
        FUNCTION hal_IR_RCVD_Isr,0233H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 15, STACK
        PUBLIC initUARTtest
        FUNCTION initUARTtest,0203H
        ARGFRAME XSTACK, 0, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource SP:8, PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-2
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B SameValue
        CFI A SameValue
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 SameValue
        CFI R1 SameValue
        CFI R2 SameValue
        CFI R3 SameValue
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT SameValue
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon1
        
Hal_IR_RCVD_Init    SYMBOL "Hal_IR_RCVD_Init"
??Hal_IR_RCVD_Init?relay SYMBOL "?relay", Hal_IR_RCVD_Init
Hal_IR_RCVD_Int_Config SYMBOL "Hal_IR_RCVD_Int_Config"
??Hal_IR_RCVD_Int_Config?relay SYMBOL "?relay", Hal_IR_RCVD_Int_Config
Hal_IR_RCVD_T1_Config SYMBOL "Hal_IR_RCVD_T1_Config"
??Hal_IR_RCVD_T1_Config?relay SYMBOL "?relay", Hal_IR_RCVD_T1_Config
UartTX_Send_String  SYMBOL "UartTX_Send_String"
??UartTX_Send_String?relay SYMBOL "?relay", UartTX_Send_String
hal_IR_RCVD_Isr     SYMBOL "hal_IR_RCVD_Isr"
`??hal_IR_RCVD_Isr??INTVEC 107` SYMBOL "??INTVEC 107", hal_IR_RCVD_Isr
initUARTtest        SYMBOL "initUARTtest"
??initUARTtest?relay SYMBOL "?relay", initUARTtest

        EXTERN IR_Encoding
        EXTERN T1_CNT1

// E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Components\hal\target\CC2530EB\hal_IR.c
//    1 #include "hal_IR.h"

        ASEGN SFR_AN:DATA:NOROOT,086H
// unsigned char volatile __sfr U0CSR
U0CSR:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,089H
// unsigned char volatile __sfr P0IFG
P0IFG:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,08cH
// unsigned char volatile __sfr PICTL
PICTL:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,08fH
// unsigned char volatile __sfr P0INP
P0INP:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,090H
// union <unnamed> volatile __sfr _A_P1
_A_P1:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0a8H
// union <unnamed> volatile __sfr _A_IEN0
_A_IEN0:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0abH
// unsigned char volatile __sfr P0IEN
P0IEN:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0afH
// unsigned char volatile __sfr T1STAT
T1STAT:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0b8H
// union <unnamed> volatile __sfr _A_IEN1
_A_IEN1:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0c0H
// union <unnamed> volatile __sfr _A_IRCON
_A_IRCON:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0c1H
// unsigned char volatile __sfr U0DBUF
U0DBUF:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0c2H
// unsigned char volatile __sfr U0BAUD
U0BAUD:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0c5H
// unsigned char volatile __sfr U0GCR
U0GCR:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0d8H
// union <unnamed> volatile __sfr _A_TIMIF
_A_TIMIF:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0daH
// unsigned char volatile __sfr T1CC0L
T1CC0L:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0dbH
// unsigned char volatile __sfr T1CC0H
T1CC0H:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0e2H
// unsigned char volatile __sfr T1CNTL
T1CNTL:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0e3H
// unsigned char volatile __sfr T1CNTH
T1CNTH:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0e4H
// unsigned char volatile __sfr T1CTL
T1CTL:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0e5H
// unsigned char volatile __sfr T1CCTL0
T1CCTL0:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0e8H
// union <unnamed> volatile __sfr _A_IRCON2
_A_IRCON2:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f1H
// unsigned char volatile __sfr PERCFG
PERCFG:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f3H
// unsigned char volatile __sfr P0SEL
P0SEL:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f7H
// unsigned char volatile __sfr P2INP
P2INP:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0fdH
// unsigned char volatile __sfr P0DIR
P0DIR:
        DS 1
//    2 #include "hal_mcu.h"
//    3 
//    4 #if (defined HAL_IR) && (HAL_IR == TRUE)
//    5 

        RSEG XDATA_Z:XDATA:NOROOT(0)
//    6 bool Hal_IR_RCVD_IntEnable;            /* interrupt enable/disable flag */
Hal_IR_RCVD_IntEnable:
        DS 1
        REQUIRE __INIT_XDATA_Z
//    7 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//    8 void initUARTtest( void )
initUARTtest:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function initUARTtest
//    9 {
        ; Saved register size: 0
        ; Auto size: 0
//   10     PERCFG &= ~0x01;			//ä½ç½®1 P0å?    
        ANL     0xf1,#0xfe
//   11     P0SEL |= 0x0c;				//P0ç¨ä½ä¸²å£
        ORL     0xf3,#0xc
        MOV     A,0xf3
//   12 
//   13     U0CSR |= 0x80;				//UARTæ¹å¼
        ORL     0x86,#0x80
//   14     U0GCR |= 10;				//baud_e
        ORL     0xc5,#0xa
        MOV     A,0xc5
//   15     U0BAUD |= 216;				//æ³¢ç¹çè®¾ä¸?7600
        ORL     0xc2,#0xd8
        MOV     A,0xc2
//   16     UTX0IF = 0;
        CLR     0xe8.1
//   17 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock0
        REQUIRE U0BAUD
        REQUIRE U0GCR
        REQUIRE U0CSR
        REQUIRE _A_IRCON2
        REQUIRE PERCFG
        REQUIRE P0SEL
//   18 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   19 void Hal_IR_RCVD_Int_Config( bool interruptEnable)
Hal_IR_RCVD_Int_Config:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function Hal_IR_RCVD_Int_Config
//   20 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//   21     Hal_IR_RCVD_IntEnable = interruptEnable;
        MOV     A,R1
        MOV     DPTR,#Hal_IR_RCVD_IntEnable
        MOVX    @DPTR,A
//   22 
//   23     if( Hal_IR_RCVD_IntEnable )
        JZ      ??Hal_IR_RCVD_Int_Config_0
//   24     {
//   25         P0SEL &= ~0x10;  //P0.4 General I/O
        ANL     0xf3,#0xef
//   26         P0DIR &= ~0x10;  //P0.4 Input
        ANL     0xfd,#0xef
//   27         P2INP &= ~0x20;  //P0 Pullup
        ANL     0xf7,#0xdf
//   28         P0INP &= ~0x10;  //P0.4 Pullup
        ANL     0x8f,#0xef
//   29 
//   30         EA = 1;          //global IEN
        SETB    0xa8.7
//   31         PICTL |= 0x01;   //P0 interruptEnable on falling edge
        ORL     0x8c,#0x1
//   32         P0IEN |= 0x10;   //P0.4 interruptEnable
        ORL     0xab,#0x10
//   33         P0IE = 1;        //P0 IEN
        SETB    0xb8.5
//   34         P0IFG &= ~0x10;  //clear P0.4 interrupt mask
        ANL     0x89,#0xef
        SJMP    ??Hal_IR_RCVD_Int_Config_1
//   35     }
//   36     else
//   37     {
//   38         P0IEN &= ~0x10;  //P0.4 interruptDisable
??Hal_IR_RCVD_Int_Config_0:
        ANL     0xab,#0xef
        CFI EndBlock cfiBlock1
//   39     }
//   40 }
??Hal_IR_RCVD_Int_Config_1:
        REQUIRE ?Subroutine0
        REQUIRE PICTL
        REQUIRE P0INP
        REQUIRE P0IFG
        REQUIRE _A_IEN0
        REQUIRE P0IEN
        REQUIRE _A_IEN1
        REQUIRE P0SEL
        REQUIRE P2INP
        REQUIRE P0DIR
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        POP     DPH
        CFI CFA_SP SP+-4
        CFI DPH0 SameValue
        POP     DPL
        CFI CFA_SP SP+-3
        CFI DPL0 SameValue
        LJMP    ?BRET
        CFI EndBlock cfiBlock2
//   41 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   42 void Hal_IR_RCVD_T1_Config( void )
Hal_IR_RCVD_T1_Config:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI Function Hal_IR_RCVD_T1_Config
//   43 {
        ; Saved register size: 0
        ; Auto size: 0
//   44     TIMIF |= 0x40;
        SETB    0xd8.6
//   45     IRCON &= ~0x20;  //Clear T1 interrupt flag
        CLR     0xc0.5
//   46     T1STAT &= ~0x04; //Clear T1 Channel 2 interrupt flag
        ANL     0xaf,#0xfb
//   47 
//   48     //P2SEL |= 0x18;  //T1 Highest Priority
//   49 
//   50     T1IE = 1;        //T1 INTEN
        SETB    0xb8.1
//   51 
//   52     T1CC0L = 0x08;
        MOV     0xda,#0x8
//   53     T1CC0H = 0x52;   //Set T1CC0=21ms,If Tick.freq=1MHz;
        MOV     0xdb,#0x52
//   54     //T1CC0L = 0xFF;
//   55     //T1CC0H = 0xFF;   //Set T1CC0=16ms,If Tick.freq=4MHz;
//   56     T1CCTL0 |= 0x44; //Set T1.CH0 INTEN,Compare Mode
        ORL     0xe5,#0x44
        MOV     A,0xe5
//   57 
//   58     T1CTL = 0x08;    //Tick frequency/32,No Operating Mode
        MOV     0xe4,#0x8
//   59     //T1CTL = 0x04;
//   60     T1CTL = ( T1CTL & ~0x01 ) | 0x02;  //Start T1 on Modulo
        MOV     A,#-0x2
        ANL     A,0xe4
        ORL     A,#0x2
        MOV     0xe4,A
//   61 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock3
        REQUIRE T1STAT
        REQUIRE _A_IEN1
        REQUIRE _A_IRCON
        REQUIRE T1CC0L
        REQUIRE T1CC0H
        REQUIRE T1CTL
        REQUIRE T1CCTL0
        REQUIRE _A_TIMIF
//   62 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   63 void UartTX_Send_String(unsigned short *Data,int len)
UartTX_Send_String:
        CFI Block cfiBlock4 Using cfiCommon0
        CFI Function UartTX_Send_String
//   64 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
//   65   int j;
//   66   for(j=0;j<len;j++)
        MOV     R6,#0x0
        MOV     R7,#0x0
        SJMP    ??UartTX_Send_String_0
//   67   {
//   68     U0DBUF = (*Data)>>8;
??UartTX_Send_String_1:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        MOVX    A,@DPTR
        MOV     0xc1,A
//   69     while(UTX0IF == 0);
??UartTX_Send_String_2:
        MOV     C,0xe8.1
        JNC     ??UartTX_Send_String_2
//   70     UTX0IF = 0;
        CLR     0xe8.1
//   71 
//   72     U0DBUF = *Data++;
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        MOV     0xc1,A
        MOV     A,R2
        ADD     A,#0x2
        INC     R2
        INC     R2
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R3,A
//   73     while(UTX0IF == 0);
??UartTX_Send_String_3:
        MOV     C,0xe8.1
        JNC     ??UartTX_Send_String_3
//   74     UTX0IF = 0;
        CLR     0xe8.1
//   75   }
        MOV     A,R6
        ADD     A,#0x1
        INC     R6
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
??UartTX_Send_String_0:
        CLR     C
        MOV     A,R6
        SUBB    A,R4
        MOV     A,R7
        SUBB    A,R5
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        JC      ??UartTX_Send_String_1
//   76 }
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock4
        REQUIRE U0DBUF
        REQUIRE _A_IRCON2
//   77 
//   78 extern unsigned short IR_Encoding[];
//   79 extern int T1_CNT1;

        RSEG NEAR_CODE:CODE:NOROOT(0)
//   80 HAL_ISR_FUNCTION( hal_IR_RCVD_Isr, P0INT_VECTOR )
hal_IR_RCVD_Isr:
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function hal_IR_RCVD_Isr
//   81 {
        PUSH    A
        CFI A Frame(CFA_SP, 3)
        CFI CFA_SP SP+-3
        MOV     A,#-0xe
        LCALL   ?INTERRUPT_ENTER_XSP
        CFI B load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI PSW load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI R1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 15
        ; Auto size: 0
//   82     if ( P0IFG & 0x10 )  //If P0.4 Interrupt
        MOV     A,0x89
        MOV     C,0xE0 /* A   */.4
        JNC     ??hal_IR_RCVD_Isr_0
//   83     {
//   84         //PERCFG &= ~0x40; //P0 Alternative 0
//   85         //P0SEL |= 0x10;  //P0.4 Peripheral
//   86 
//   87         //T1CCTL2 = 0x43;  //CH2,INTEN,Capture Mode on all Edges
//   88         //T1CTL = ( T1CTL & ~0x01 ) | 0x02;  //Start T1 on Modulo
//   89 
//   90         //P0IFG = 0;       //clear P0 interrupt mask
//   91         //P0IF = 0;        //clear P0 interrupt mask
//   92         //Hal_IR_RCVD_Int_Config( HAL_IR_INTERRUPT_DISABLE );  //Disable IR_INT
//   93 
//   94         IR_Encoding[T1_CNT1] = T1CNTL;
        MOV     DPTR,#T1_CNT1
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R0
        CLR     C
        RLC     A
        MOV     R0,A
        MOV     A,R1
        RLC     A
        MOV     R1,A
        MOV     A,R0
        ADD     A,#(IR_Encoding & 0xff)
        MOV     R0,A
        MOV     A,R1
        ADDC    A,#((IR_Encoding >> 8) & 0xff)
        MOV     R1,A
        MOV     A,0xe2
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
//   95         IR_Encoding[T1_CNT1++] += T1CNTH*0x100;
        MOV     DPTR,#T1_CNT1
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,#0x1
        ADD     A,R2
        INC     R2
        CLR     A
        ADDC    A,R3
        MOV     R3,A
        MOV     DPTR,#T1_CNT1
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     A,0xe3
        MOV     R3,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        ADD     A,#0x0
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R3
        MOVX    @DPTR,A
//   96         T1CNTL = 0x00;        //Clear T1.CNT
        MOV     0xe2,#0x0
//   97 
//   98         P0IFG = 0;       //clear P0 interrupt mask
        MOV     0x89,#0x0
//   99         P0IF = 0;        //clear P0 interrupt mask
        CLR     0xc0.5
//  100         PICTL ^= 0x01;   //PICTL_0 Flip Flop
        XRL     0x8c,#0x1
        MOV     A,0x8c
//  101         
//  102         P1_0=!P1_0;
        CPL     0x90.0
//  103         P1_1=!P1_1;
        CPL     0x90.1
//  104     }
//  105 }
??hal_IR_RCVD_Isr_0:
        MOV     R7,#0x1
        LJMP    ?INTERRUPT_LEAVE_XSP
        CFI EndBlock cfiBlock5
        REQUIRE PICTL
        REQUIRE _A_P1
        REQUIRE P0IFG
        REQUIRE _A_IRCON
        REQUIRE T1CNTL
        REQUIRE T1CNTH
//  106 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  107 void Hal_IR_RCVD_Init( void )
Hal_IR_RCVD_Init:
        CFI Block cfiBlock6 Using cfiCommon0
        CFI Function Hal_IR_RCVD_Init
//  108 {
        FUNCALL Hal_IR_RCVD_Init, Hal_IR_RCVD_Int_Config
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Hal_IR_RCVD_Init, Hal_IR_RCVD_T1_Config
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  109     Hal_IR_RCVD_Int_Config( HAL_IR_INTERRUPT_ENABLE );
        ; Setup parameters for call to function Hal_IR_RCVD_Int_Config
        MOV     R1,#0x1
        LCALL   ??Hal_IR_RCVD_Int_Config?relay
//  110     Hal_IR_RCVD_T1_Config();
        ; Setup parameters for call to function Hal_IR_RCVD_T1_Config
        LCALL   ??Hal_IR_RCVD_T1_Config?relay
//  111 }
        SJMP    ?Subroutine0
        CFI EndBlock cfiBlock6

        COMMON INTVEC:CODE:ROOT(0)
        ORG 107
`??hal_IR_RCVD_Isr??INTVEC 107`:
        LJMP       (hal_IR_RCVD_Isr)

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??initUARTtest?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    initUARTtest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Hal_IR_RCVD_Int_Config?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    Hal_IR_RCVD_Int_Config

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Hal_IR_RCVD_T1_Config?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    Hal_IR_RCVD_T1_Config

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??UartTX_Send_String?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    UartTX_Send_String

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Hal_IR_RCVD_Init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    Hal_IR_RCVD_Init

        END
//  112 
//  113 #endif
// 
// 194 bytes in segment BANKED_CODE
//  30 bytes in segment BANK_RELAYS
//   3 bytes in segment INTVEC
// 106 bytes in segment NEAR_CODE
//  25 bytes in segment SFR_AN
//   1 byte  in segment XDATA_Z
// 
// 330 bytes of CODE  memory (+  3 bytes shared)
//   0 bytes of DATA  memory (+ 25 bytes shared)
//   1 byte  of XDATA memory
//
//Errors: none
//Warnings: 1
