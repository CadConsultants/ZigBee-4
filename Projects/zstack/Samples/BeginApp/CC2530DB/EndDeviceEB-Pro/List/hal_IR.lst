###############################################################################
#                                                                             #
# IAR C/C++ Compiler V7.51A/W32 for 8051                29/Nov/2013  12:48:12 #
# Copyright 2004-2009 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Components\h #
#                          al\target\CC2530EB\hal_IR.c                        #
#    Command line       =  -f E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C #
#                          51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEX #
#                          AS-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\ #
#                          zstack\Samples\BeginApp\CC2530DB\..\..\..\Tools\CC #
#                          2530DB\f8wEndev.cfg (-DCPU32MHZ                    #
#                          -DROOT=__near_func -DBLINK_LEDS) -f                #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\..\..\..\Tools\CC253 #
#                          0DB\f8wConfig.cfg (-DSECURE=0                      #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x04000000                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE     #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100) -DREJOIN_POLL_RATE=440   #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Components\h #
#                          al\target\CC2530EB\hal_IR.c -D ZIGBEEPRO -D        #
#                          NWK_AUTO_POLL -D ZTOOL_P1 -D MT_TASK -D            #
#                          MT_SYS_FUNC -D MT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG  #
#                          -D xPOWER_SAVING -D HAL_LCD=FALSE -D               #
#                          HAL_KEY=FALSE -D HAL_ADC=FALSE -D HAL_UART=FALSE   #
#                          -D HAL_SPI=FALSE -lC E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍ #
#                          øÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_P #
#                          ROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530-2.2 #
#                          .0-1.3.0\Projects\zstack\Samples\BeginApp\CC2530DB #
#                          \EndDeviceEB-Pro\List\ -lA                         #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\EndDeviceEB-Pro\List #
#                          \ --diag_suppress Pe001,Pa010 -o                   #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\EndDeviceEB-Pro\Obj\ #
#                           -e --require_prototypes --debug --core=plain      #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 8 -I E:\C51RF-CC2530-PKÎÞÏßZIGBE #
#                          EÍøÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007 #
#                          _PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530-2 #
#                          .2.0-1.3.0\Projects\zstack\Samples\BeginApp\CC2530 #
#                          DB\ -I E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1. #
#                          10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò #
#                          \TEXAS-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Proje #
#                          cts\zstack\Samples\BeginApp\CC2530DB\..\SOURCE\    #
#                          -I E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C #
#                          51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEX #
#                          AS-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\ #
#                          zstack\Samples\BeginApp\CC2530DB\..\..\..\ZMAIN\TI #
#                          2530DB\ -I E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì #
#                          ¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ #
#                          ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\P #
#                          rojects\zstack\Samples\BeginApp\CC2530DB\..\..\..\ #
#                          ..\..\COMPONENTS\MT\ -I E:\C51RF-CC2530-PKÎÞÏßZIGB #
#                          EEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE200 #
#                          7_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530- #
#                          2.2.0-1.3.0\Projects\zstack\Samples\BeginApp\CC253 #
#                          0DB\..\..\..\..\..\COMPONENTS\HAL\INCLUDE\ -I      #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\HAL\TARGET\CC2530EB\ -I                      #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\OSAL\MCU\CCSOC\ -I                           #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\OSAL\INCLUDE\ -I E:\C51RF-CC2530-PKÎÞÏßZIGBE #
#                          EÍøÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007 #
#                          _PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530-2 #
#                          .2.0-1.3.0\Projects\zstack\Samples\BeginApp\CC2530 #
#                          DB\..\..\..\..\..\COMPONENTS\STACK\AF\ -I          #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\STACK\NWK\ -I E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍø #
#                          Âç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PR #
#                          OÑÝÊ¾²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530-2.2. #
#                          0-1.3.0\Projects\zstack\Samples\BeginApp\CC2530DB\ #
#                          ..\..\..\..\..\COMPONENTS\STACK\SEC\ -I            #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\STACK\SAPI\ -I E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍ #
#                          øÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_P #
#                          ROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530-2.2 #
#                          .0-1.3.0\Projects\zstack\Samples\BeginApp\CC2530DB #
#                          \..\..\..\..\..\COMPONENTS\STACK\SYS\ -I           #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\STACK\ZDO\ -I E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍø #
#                          Âç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PR #
#                          OÑÝÊ¾²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530-2.2. #
#                          0-1.3.0\Projects\zstack\Samples\BeginApp\CC2530DB\ #
#                          ..\..\..\..\..\COMPONENTS\ZMAC\F8W\ -I             #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\ZMAC\ -I E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª· #
#                          ¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾ #
#                          ²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3 #
#                          .0\Projects\zstack\Samples\BeginApp\CC2530DB\..\.. #
#                          \..\..\..\COMPONENTS\SERVICES\SADDR\ -I            #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\SERVICES\SDATA\ -I                           #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\MAC\INCLUDE\ -I E:\C51RF-CC2530-PKÎÞÏßZIGBEE #
#                          ÍøÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_ #
#                          PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530-2. #
#                          2.0-1.3.0\Projects\zstack\Samples\BeginApp\CC2530D #
#                          B\..\..\..\..\..\COMPONENTS\MAC\HIGH_LEVEL\ -I     #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\MAC\LOW_LEVEL\srf04\ -I                      #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\MAC\LOW_LEVEL\srf04\SINGLE_CHIP\ -I          #
#                          "C:\Program Files\IAR Systems\Embedded Workbench   #
#                          5.3 Evaluation version\8051\INC\" -I "C:\Program   #
#                          Files\IAR Systems\Embedded Workbench 5.3           #
#                          Evaluation version\8051\INC\CLIB\" -Ohz            #
#    List file          =  E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\EndDeviceEB-Pro\List #
#                          \hal_IR.lst                                        #
#    Object file        =  E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\EndDeviceEB-Pro\Obj\ #
#                          hal_IR.r51                                         #
#                                                                             #
#                                                                             #
###############################################################################

E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Components\hal\target\CC2530EB\hal_IR.c
      1          #include "hal_IR.h"

  #ifndef HAL_IR_H
                 ^
"E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\COMPONENTS\HAL\INCLUDE\hal_IR.h",1  Warning[Pa050]: 
          non-native end of line sequence detected (this diagnostic is only
          issued once)

   \                                 In  segment SFR_AN, at 0x86
   \   unsigned char volatile __sfr U0CSR
   \                     U0CSR:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0x89
   \   unsigned char volatile __sfr P0IFG
   \                     P0IFG:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0x8c
   \   unsigned char volatile __sfr PICTL
   \                     PICTL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0x8f
   \   unsigned char volatile __sfr P0INP
   \                     P0INP:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0x90
   \   union <unnamed> volatile __sfr _A_P1
   \                     _A_P1:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xa8
   \   union <unnamed> volatile __sfr _A_IEN0
   \                     _A_IEN0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xab
   \   unsigned char volatile __sfr P0IEN
   \                     P0IEN:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xaf
   \   unsigned char volatile __sfr T1STAT
   \                     T1STAT:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xb8
   \   union <unnamed> volatile __sfr _A_IEN1
   \                     _A_IEN1:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xc0
   \   union <unnamed> volatile __sfr _A_IRCON
   \                     _A_IRCON:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xc1
   \   unsigned char volatile __sfr U0DBUF
   \                     U0DBUF:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xc2
   \   unsigned char volatile __sfr U0BAUD
   \                     U0BAUD:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xc5
   \   unsigned char volatile __sfr U0GCR
   \                     U0GCR:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xd8
   \   union <unnamed> volatile __sfr _A_TIMIF
   \                     _A_TIMIF:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xda
   \   unsigned char volatile __sfr T1CC0L
   \                     T1CC0L:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xdb
   \   unsigned char volatile __sfr T1CC0H
   \                     T1CC0H:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xe2
   \   unsigned char volatile __sfr T1CNTL
   \                     T1CNTL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xe3
   \   unsigned char volatile __sfr T1CNTH
   \                     T1CNTH:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xe4
   \   unsigned char volatile __sfr T1CTL
   \                     T1CTL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xe5
   \   unsigned char volatile __sfr T1CCTL0
   \                     T1CCTL0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xe8
   \   union <unnamed> volatile __sfr _A_IRCON2
   \                     _A_IRCON2:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf1
   \   unsigned char volatile __sfr PERCFG
   \                     PERCFG:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf3
   \   unsigned char volatile __sfr P0SEL
   \                     P0SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf7
   \   unsigned char volatile __sfr P2INP
   \                     P2INP:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfd
   \   unsigned char volatile __sfr P0DIR
   \                     P0DIR:
   \   000000                DS 1
      2          #include "hal_mcu.h"
      3          
      4          #if (defined HAL_IR) && (HAL_IR == TRUE)
      5          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
      6          bool Hal_IR_RCVD_IntEnable;            /* interrupt enable/disable flag */
   \                     Hal_IR_RCVD_IntEnable:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
      7          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
      8          void initUARTtest( void )
   \                     initUARTtest:
      9          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     10              PERCFG &= ~0x01;			//ä½ç½®1 P0å?    
   \   000000   53F1FE       ANL     0xf1,#0xfe
     11              P0SEL |= 0x0c;				//P0ç¨ä½ä¸²å£
   \   000003   43F30C       ORL     0xf3,#0xc
   \   000006   E5F3         MOV     A,0xf3
     12          
     13              U0CSR |= 0x80;				//UARTæ¹å¼
   \   000008   438680       ORL     0x86,#0x80
     14              U0GCR |= 10;				//baud_e
   \   00000B   43C50A       ORL     0xc5,#0xa
   \   00000E   E5C5         MOV     A,0xc5
     15              U0BAUD |= 216;				//æ³¢ç¹çè®¾ä¸?7600
   \   000010   43C2D8       ORL     0xc2,#0xd8
   \   000013   E5C2         MOV     A,0xc2
     16              UTX0IF = 0;
   \   000015   C2E9         CLR     0xe8.1
     17          }
   \   000017   02....       LJMP    ?BRET
   \   00001A                REQUIRE U0BAUD
   \   00001A                REQUIRE U0GCR
   \   00001A                REQUIRE U0CSR
   \   00001A                REQUIRE _A_IRCON2
   \   00001A                REQUIRE PERCFG
   \   00001A                REQUIRE P0SEL
     18          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     19          void Hal_IR_RCVD_Int_Config( bool interruptEnable)
   \                     Hal_IR_RCVD_Int_Config:
     20          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     21              Hal_IR_RCVD_IntEnable = interruptEnable;
   \   000004   E9           MOV     A,R1
   \   000005   90....       MOV     DPTR,#Hal_IR_RCVD_IntEnable
   \   000008   F0           MOVX    @DPTR,A
     22          
     23              if( Hal_IR_RCVD_IntEnable )
   \   000009   601B         JZ      ??Hal_IR_RCVD_Int_Config_0
     24              {
     25                  P0SEL &= ~0x10;  //P0.4 General I/O
   \   00000B   53F3EF       ANL     0xf3,#0xef
     26                  P0DIR &= ~0x10;  //P0.4 Input
   \   00000E   53FDEF       ANL     0xfd,#0xef
     27                  P2INP &= ~0x20;  //P0 Pullup
   \   000011   53F7DF       ANL     0xf7,#0xdf
     28                  P0INP &= ~0x10;  //P0.4 Pullup
   \   000014   538FEF       ANL     0x8f,#0xef
     29          
     30                  EA = 1;          //global IEN
   \   000017   D2AF         SETB    0xa8.7
     31                  PICTL |= 0x01;   //P0 interruptEnable on falling edge
   \   000019   438C01       ORL     0x8c,#0x1
     32                  P0IEN |= 0x10;   //P0.4 interruptEnable
   \   00001C   43AB10       ORL     0xab,#0x10
     33                  P0IE = 1;        //P0 IEN
   \   00001F   D2BD         SETB    0xb8.5
     34                  P0IFG &= ~0x10;  //clear P0.4 interrupt mask
   \   000021   5389EF       ANL     0x89,#0xef
   \   000024   8003         SJMP    ??Hal_IR_RCVD_Int_Config_1
     35              }
     36              else
     37              {
     38                  P0IEN &= ~0x10;  //P0.4 interruptDisable
   \                     ??Hal_IR_RCVD_Int_Config_0:
   \   000026   53ABEF       ANL     0xab,#0xef
     39              }
     40          }
   \                     ??Hal_IR_RCVD_Int_Config_1:
   \   000029                REQUIRE ?Subroutine0
   \   000029                REQUIRE PICTL
   \   000029                REQUIRE P0INP
   \   000029                REQUIRE P0IFG
   \   000029                REQUIRE _A_IEN0
   \   000029                REQUIRE P0IEN
   \   000029                REQUIRE _A_IEN1
   \   000029                REQUIRE P0SEL
   \   000029                REQUIRE P2INP
   \   000029                REQUIRE P0DIR
   \   000029                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
     41          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     42          void Hal_IR_RCVD_T1_Config( void )
   \                     Hal_IR_RCVD_T1_Config:
     43          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     44              TIMIF |= 0x40;
   \   000000   D2DE         SETB    0xd8.6
     45              IRCON &= ~0x20;  //Clear T1 interrupt flag
   \   000002   C2C5         CLR     0xc0.5
     46              T1STAT &= ~0x04; //Clear T1 Channel 2 interrupt flag
   \   000004   53AFFB       ANL     0xaf,#0xfb
     47          
     48              //P2SEL |= 0x18;  //T1 Highest Priority
     49          
     50              T1IE = 1;        //T1 INTEN
   \   000007   D2B9         SETB    0xb8.1
     51          
     52              T1CC0L = 0x08;
   \   000009   75DA08       MOV     0xda,#0x8
     53              T1CC0H = 0x52;   //Set T1CC0=21ms,If Tick.freq=1MHz;
   \   00000C   75DB52       MOV     0xdb,#0x52
     54              //T1CC0L = 0xFF;
     55              //T1CC0H = 0xFF;   //Set T1CC0=16ms,If Tick.freq=4MHz;
     56              T1CCTL0 |= 0x44; //Set T1.CH0 INTEN,Compare Mode
   \   00000F   43E544       ORL     0xe5,#0x44
   \   000012   E5E5         MOV     A,0xe5
     57          
     58              T1CTL = 0x08;    //Tick frequency/32,No Operating Mode
   \   000014   75E408       MOV     0xe4,#0x8
     59              //T1CTL = 0x04;
     60              T1CTL = ( T1CTL & ~0x01 ) | 0x02;  //Start T1 on Modulo
   \   000017   74FE         MOV     A,#-0x2
   \   000019   55E4         ANL     A,0xe4
   \   00001B   4402         ORL     A,#0x2
   \   00001D   F5E4         MOV     0xe4,A
     61          }
   \   00001F   02....       LJMP    ?BRET
   \   000022                REQUIRE T1STAT
   \   000022                REQUIRE _A_IEN1
   \   000022                REQUIRE _A_IRCON
   \   000022                REQUIRE T1CC0L
   \   000022                REQUIRE T1CC0H
   \   000022                REQUIRE T1CTL
   \   000022                REQUIRE T1CCTL0
   \   000022                REQUIRE _A_TIMIF
     62          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     63          void UartTX_Send_String(unsigned short *Data,int len)
   \                     UartTX_Send_String:
     64          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
     65            int j;
     66            for(j=0;j<len;j++)
   \   000005   7E00         MOV     R6,#0x0
   \   000007   7F00         MOV     R7,#0x0
   \   000009   802C         SJMP    ??UartTX_Send_String_0
     67            {
     68              U0DBUF = (*Data)>>8;
   \                     ??UartTX_Send_String_1:
   \   00000B   8A82         MOV     DPL,R2
   \   00000D   8B83         MOV     DPH,R3
   \   00000F   A3           INC     DPTR
   \   000010   E0           MOVX    A,@DPTR
   \   000011   F5C1         MOV     0xc1,A
     69              while(UTX0IF == 0);
   \                     ??UartTX_Send_String_2:
   \   000013   A2E9         MOV     C,0xe8.1
   \   000015   50FC         JNC     ??UartTX_Send_String_2
     70              UTX0IF = 0;
   \   000017   C2E9         CLR     0xe8.1
     71          
     72              U0DBUF = *Data++;
   \   000019   8A82         MOV     DPL,R2
   \   00001B   8B83         MOV     DPH,R3
   \   00001D   E0           MOVX    A,@DPTR
   \   00001E   F5C1         MOV     0xc1,A
   \   000020   EA           MOV     A,R2
   \   000021   2402         ADD     A,#0x2
   \   000023   0A           INC     R2
   \   000024   0A           INC     R2
   \   000025   EB           MOV     A,R3
   \   000026   3400         ADDC    A,#0x0
   \   000028   FB           MOV     R3,A
     73              while(UTX0IF == 0);
   \                     ??UartTX_Send_String_3:
   \   000029   A2E9         MOV     C,0xe8.1
   \   00002B   50FC         JNC     ??UartTX_Send_String_3
     74              UTX0IF = 0;
   \   00002D   C2E9         CLR     0xe8.1
     75            }
   \   00002F   EE           MOV     A,R6
   \   000030   2401         ADD     A,#0x1
   \   000032   0E           INC     R6
   \   000033   EF           MOV     A,R7
   \   000034   3400         ADDC    A,#0x0
   \   000036   FF           MOV     R7,A
   \                     ??UartTX_Send_String_0:
   \   000037   C3           CLR     C
   \   000038   EE           MOV     A,R6
   \   000039   9C           SUBB    A,R4
   \   00003A   EF           MOV     A,R7
   \   00003B   9D           SUBB    A,R5
   \   00003C   A2D2         MOV     C,0xD0 /* PSW */.2
   \   00003E   65D0         XRL     A,PSW
   \   000040   33           RLC     A
   \   000041   40C8         JC      ??UartTX_Send_String_1
     76          }
   \   000043   7F01         MOV     R7,#0x1
   \   000045   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   000048                REQUIRE U0DBUF
   \   000048                REQUIRE _A_IRCON2
     77          
     78          extern unsigned short IR_Encoding[];
     79          extern int T1_CNT1;

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     80          HAL_ISR_FUNCTION( hal_IR_RCVD_Isr, P0INT_VECTOR )
   \                     hal_IR_RCVD_Isr:
     81          {
   \   000000   C0E0         PUSH    A
   \   000002   74F2         MOV     A,#-0xe
   \   000004   12....       LCALL   ?INTERRUPT_ENTER_XSP
   \   000007                ; Saved register size: 15
   \   000007                ; Auto size: 0
     82              if ( P0IFG & 0x10 )  //If P0.4 Interrupt
   \   000007   E589         MOV     A,0x89
   \   000009   A2E4         MOV     C,0xE0 /* A   */.4
   \   00000B   5058         JNC     ??hal_IR_RCVD_Isr_0
     83              {
     84                  //PERCFG &= ~0x40; //P0 Alternative 0
     85                  //P0SEL |= 0x10;  //P0.4 Peripheral
     86          
     87                  //T1CCTL2 = 0x43;  //CH2,INTEN,Capture Mode on all Edges
     88                  //T1CTL = ( T1CTL & ~0x01 ) | 0x02;  //Start T1 on Modulo
     89          
     90                  //P0IFG = 0;       //clear P0 interrupt mask
     91                  //P0IF = 0;        //clear P0 interrupt mask
     92                  //Hal_IR_RCVD_Int_Config( HAL_IR_INTERRUPT_DISABLE );  //Disable IR_INT
     93          
     94                  IR_Encoding[T1_CNT1] = T1CNTL;
   \   00000D   90....       MOV     DPTR,#T1_CNT1
   \   000010   E0           MOVX    A,@DPTR
   \   000011   F8           MOV     R0,A
   \   000012   A3           INC     DPTR
   \   000013   E0           MOVX    A,@DPTR
   \   000014   F9           MOV     R1,A
   \   000015   E8           MOV     A,R0
   \   000016   C3           CLR     C
   \   000017   33           RLC     A
   \   000018   F8           MOV     R0,A
   \   000019   E9           MOV     A,R1
   \   00001A   33           RLC     A
   \   00001B   F9           MOV     R1,A
   \   00001C   E8           MOV     A,R0
   \   00001D   24..         ADD     A,#(IR_Encoding & 0xff)
   \   00001F   F8           MOV     R0,A
   \   000020   E9           MOV     A,R1
   \   000021   34..         ADDC    A,#((IR_Encoding >> 8) & 0xff)
   \   000023   F9           MOV     R1,A
   \   000024   E5E2         MOV     A,0xe2
   \   000026   8882         MOV     DPL,R0
   \   000028   8983         MOV     DPH,R1
   \   00002A   F0           MOVX    @DPTR,A
   \   00002B   A3           INC     DPTR
   \   00002C   E4           CLR     A
   \   00002D   F0           MOVX    @DPTR,A
     95                  IR_Encoding[T1_CNT1++] += T1CNTH*0x100;
   \   00002E   90....       MOV     DPTR,#T1_CNT1
   \   000031   E0           MOVX    A,@DPTR
   \   000032   FA           MOV     R2,A
   \   000033   A3           INC     DPTR
   \   000034   E0           MOVX    A,@DPTR
   \   000035   FB           MOV     R3,A
   \   000036   7401         MOV     A,#0x1
   \   000038   2A           ADD     A,R2
   \   000039   0A           INC     R2
   \   00003A   E4           CLR     A
   \   00003B   3B           ADDC    A,R3
   \   00003C   FB           MOV     R3,A
   \   00003D   90....       MOV     DPTR,#T1_CNT1
   \   000040   EA           MOV     A,R2
   \   000041   F0           MOVX    @DPTR,A
   \   000042   A3           INC     DPTR
   \   000043   EB           MOV     A,R3
   \   000044   F0           MOVX    @DPTR,A
   \   000045   E5E3         MOV     A,0xe3
   \   000047   FB           MOV     R3,A
   \   000048   8882         MOV     DPL,R0
   \   00004A   8983         MOV     DPH,R1
   \   00004C   E0           MOVX    A,@DPTR
   \   00004D   2400         ADD     A,#0x0
   \   00004F   F0           MOVX    @DPTR,A
   \   000050   A3           INC     DPTR
   \   000051   E0           MOVX    A,@DPTR
   \   000052   3B           ADDC    A,R3
   \   000053   F0           MOVX    @DPTR,A
     96                  T1CNTL = 0x00;        //Clear T1.CNT
   \   000054   75E200       MOV     0xe2,#0x0
     97          
     98                  P0IFG = 0;       //clear P0 interrupt mask
   \   000057   758900       MOV     0x89,#0x0
     99                  P0IF = 0;        //clear P0 interrupt mask
   \   00005A   C2C5         CLR     0xc0.5
    100                  PICTL ^= 0x01;   //PICTL_0 Flip Flop
   \   00005C   638C01       XRL     0x8c,#0x1
   \   00005F   E58C         MOV     A,0x8c
    101                  
    102                  P1_0=!P1_0;
   \   000061   B290         CPL     0x90.0
    103                  P1_1=!P1_1;
   \   000063   B291         CPL     0x90.1
    104              }
    105          }
   \                     ??hal_IR_RCVD_Isr_0:
   \   000065   7F01         MOV     R7,#0x1
   \   000067   02....       LJMP    ?INTERRUPT_LEAVE_XSP
   \   00006A                REQUIRE PICTL
   \   00006A                REQUIRE _A_P1
   \   00006A                REQUIRE P0IFG
   \   00006A                REQUIRE _A_IRCON
   \   00006A                REQUIRE T1CNTL
   \   00006A                REQUIRE T1CNTH
    106          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    107          void Hal_IR_RCVD_Init( void )
   \                     Hal_IR_RCVD_Init:
    108          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    109              Hal_IR_RCVD_Int_Config( HAL_IR_INTERRUPT_ENABLE );
   \   000004                ; Setup parameters for call to function Hal_IR_RCVD_Int_Config
   \   000004   7901         MOV     R1,#0x1
   \   000006   12....       LCALL   ??Hal_IR_RCVD_Int_Config?relay
    110              Hal_IR_RCVD_T1_Config();
   \   000009                ; Setup parameters for call to function Hal_IR_RCVD_T1_Config
   \   000009   12....       LCALL   ??Hal_IR_RCVD_T1_Config?relay
    111          }
   \   00000C   80..         SJMP    ?Subroutine0

   \                                 In  segment INTVEC, offset 0x6b, root
   \                     `??hal_IR_RCVD_Isr??INTVEC 107`:
   \   00006B   02....       LJMP       (hal_IR_RCVD_Isr)

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??initUARTtest?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    initUARTtest

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Hal_IR_RCVD_Int_Config?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Hal_IR_RCVD_Int_Config

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Hal_IR_RCVD_T1_Config?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Hal_IR_RCVD_T1_Config

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??UartTX_Send_String?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    UartTX_Send_String

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Hal_IR_RCVD_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Hal_IR_RCVD_Init
    112          
    113          #endif

   Maximum stack usage in bytes:

     Function                    ISTACK PSTACK XSTACK
     --------                    ------ ------ ------
     Hal_IR_RCVD_Init                2      0      0
       -> Hal_IR_RCVD_Int_Config     4      0      0
       -> Hal_IR_RCVD_T1_Config      4      0      0
     Hal_IR_RCVD_Int_Config          2      0      0
     Hal_IR_RCVD_T1_Config           0      0      0
     UartTX_Send_String              0      0      9
     hal_IR_RCVD_Isr                15      0      0
     initUARTtest                    0      0      0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     U0CSR                             1
     P0IFG                             1
     PICTL                             1
     P0INP                             1
     _A_P1                             1
     _A_IEN0                           1
     P0IEN                             1
     T1STAT                            1
     _A_IEN1                           1
     _A_IRCON                          1
     U0DBUF                            1
     U0BAUD                            1
     U0GCR                             1
     _A_TIMIF                          1
     T1CC0L                            1
     T1CC0H                            1
     T1CNTL                            1
     T1CNTH                            1
     T1CTL                             1
     T1CCTL0                           1
     _A_IRCON2                         1
     PERCFG                            1
     P0SEL                             1
     P2INP                             1
     P0DIR                             1
     Hal_IR_RCVD_IntEnable             1
     initUARTtest                     26
     Hal_IR_RCVD_Int_Config           41
     ?Subroutine0                      7
     Hal_IR_RCVD_T1_Config            34
     UartTX_Send_String               72
     hal_IR_RCVD_Isr                 106
     Hal_IR_RCVD_Init                 14
     ??hal_IR_RCVD_Isr??INTVEC 107     3
     ??initUARTtest?relay              6
     ??Hal_IR_RCVD_Int_Config?relay    6
     ??Hal_IR_RCVD_T1_Config?relay     6
     ??UartTX_Send_String?relay        6
     ??Hal_IR_RCVD_Init?relay          6

 
 194 bytes in segment BANKED_CODE
  30 bytes in segment BANK_RELAYS
   3 bytes in segment INTVEC
 106 bytes in segment NEAR_CODE
  25 bytes in segment SFR_AN
   1 byte  in segment XDATA_Z
 
 330 bytes of CODE  memory (+  3 bytes shared)
   0 bytes of DATA  memory (+ 25 bytes shared)
   1 byte  of XDATA memory

Errors: none
Warnings: 1
