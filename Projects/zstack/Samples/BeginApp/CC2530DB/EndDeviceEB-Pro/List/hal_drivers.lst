###############################################################################
#                                                                             #
# IAR C/C++ Compiler V7.51A/W32 for 8051                28/Nov/2013  12:45:51 #
# Copyright 2004-2009 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Components\h #
#                          al\common\hal_drivers.c                            #
#    Command line       =  -f E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C #
#                          51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEX #
#                          AS-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\ #
#                          zstack\Samples\BeginApp\CC2530DB\..\..\..\Tools\CC #
#                          2530DB\f8wEndev.cfg (-DCPU32MHZ                    #
#                          -DROOT=__near_func -DBLINK_LEDS) -f                #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\..\..\..\Tools\CC253 #
#                          0DB\f8wConfig.cfg (-DSECURE=0                      #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x04000000                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE     #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100) -DREJOIN_POLL_RATE=440   #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Components\h #
#                          al\common\hal_drivers.c -D ZIGBEEPRO -D            #
#                          NWK_AUTO_POLL -D ZTOOL_P1 -D MT_TASK -D            #
#                          MT_SYS_FUNC -D MT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG  #
#                          -D xPOWER_SAVING -D HAL_LCD=FALSE -D               #
#                          HAL_KEY=FALSE -D HAL_ADC=FALSE -D HAL_UART=FALSE   #
#                          -D HAL_SPI=FALSE -lC E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍ #
#                          øÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_P #
#                          ROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530-2.2 #
#                          .0-1.3.0\Projects\zstack\Samples\BeginApp\CC2530DB #
#                          \EndDeviceEB-Pro\List\ -lA                         #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\EndDeviceEB-Pro\List #
#                          \ --diag_suppress Pe001,Pa010 -o                   #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\EndDeviceEB-Pro\Obj\ #
#                           -e --require_prototypes --debug --core=plain      #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 8 -I E:\C51RF-CC2530-PKÎÞÏßZIGBE #
#                          EÍøÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007 #
#                          _PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530-2 #
#                          .2.0-1.3.0\Projects\zstack\Samples\BeginApp\CC2530 #
#                          DB\ -I E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1. #
#                          10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò #
#                          \TEXAS-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Proje #
#                          cts\zstack\Samples\BeginApp\CC2530DB\..\SOURCE\    #
#                          -I E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C #
#                          51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEX #
#                          AS-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\ #
#                          zstack\Samples\BeginApp\CC2530DB\..\..\..\ZMAIN\TI #
#                          2530DB\ -I E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì #
#                          ¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ #
#                          ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\P #
#                          rojects\zstack\Samples\BeginApp\CC2530DB\..\..\..\ #
#                          ..\..\COMPONENTS\MT\ -I E:\C51RF-CC2530-PKÎÞÏßZIGB #
#                          EEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE200 #
#                          7_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530- #
#                          2.2.0-1.3.0\Projects\zstack\Samples\BeginApp\CC253 #
#                          0DB\..\..\..\..\..\COMPONENTS\HAL\INCLUDE\ -I      #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\HAL\TARGET\CC2530EB\ -I                      #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\OSAL\MCU\CCSOC\ -I                           #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\OSAL\INCLUDE\ -I E:\C51RF-CC2530-PKÎÞÏßZIGBE #
#                          EÍøÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007 #
#                          _PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530-2 #
#                          .2.0-1.3.0\Projects\zstack\Samples\BeginApp\CC2530 #
#                          DB\..\..\..\..\..\COMPONENTS\STACK\AF\ -I          #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\STACK\NWK\ -I E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍø #
#                          Âç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PR #
#                          OÑÝÊ¾²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530-2.2. #
#                          0-1.3.0\Projects\zstack\Samples\BeginApp\CC2530DB\ #
#                          ..\..\..\..\..\COMPONENTS\STACK\SEC\ -I            #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\STACK\SAPI\ -I E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍ #
#                          øÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_P #
#                          ROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530-2.2 #
#                          .0-1.3.0\Projects\zstack\Samples\BeginApp\CC2530DB #
#                          \..\..\..\..\..\COMPONENTS\STACK\SYS\ -I           #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\STACK\ZDO\ -I E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍø #
#                          Âç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PR #
#                          OÑÝÊ¾²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530-2.2. #
#                          0-1.3.0\Projects\zstack\Samples\BeginApp\CC2530DB\ #
#                          ..\..\..\..\..\COMPONENTS\ZMAC\F8W\ -I             #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\ZMAC\ -I E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª· #
#                          ¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾ #
#                          ²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3 #
#                          .0\Projects\zstack\Samples\BeginApp\CC2530DB\..\.. #
#                          \..\..\..\COMPONENTS\SERVICES\SADDR\ -I            #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\SERVICES\SDATA\ -I                           #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\MAC\INCLUDE\ -I E:\C51RF-CC2530-PKÎÞÏßZIGBEE #
#                          ÍøÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_ #
#                          PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530-2. #
#                          2.0-1.3.0\Projects\zstack\Samples\BeginApp\CC2530D #
#                          B\..\..\..\..\..\COMPONENTS\MAC\HIGH_LEVEL\ -I     #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\MAC\LOW_LEVEL\srf04\ -I                      #
#                          E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\MAC\LOW_LEVEL\srf04\SINGLE_CHIP\ -I          #
#                          "C:\Program Files\IAR Systems\Embedded Workbench   #
#                          5.3 Evaluation version\8051\INC\" -I "C:\Program   #
#                          Files\IAR Systems\Embedded Workbench 5.3           #
#                          Evaluation version\8051\INC\CLIB\" -Ohz            #
#    List file          =  E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\EndDeviceEB-Pro\List #
#                          \hal_drivers.lst                                   #
#    Object file        =  E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS- #
#                          INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\EndDeviceEB-Pro\Obj\ #
#                          hal_drivers.r51                                    #
#                                                                             #
#                                                                             #
###############################################################################

E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\Components\hal\common\hal_drivers.c
      1          /**************************************************************************************************
      2            Filename:       hal_drivers.c
      3            Revised:        $Date: 2007-07-06 10:42:24 -0700 (Fri, 06 Jul 2007) $
      4            Revision:       $Revision: 13579 $
      5          
      6            Description:    This file contains the interface to the Drivers Service.
      7          
      8          
      9            Copyright 2005-2007 Texas Instruments Incorporated. All rights reserved.
     10          
     11            IMPORTANT: Your use of this Software is limited to those specific rights
     12            granted under the terms of a software license agreement between the user
     13            who downloaded the software, his/her employer (which must be your employer)
     14            and Texas Instruments Incorporated (the "License").  You may not use this
     15            Software unless you agree to abide by the terms of the License. The License
     16            limits your use, and you acknowledge, that the Software may not be modified,
     17            copied or distributed unless embedded on a Texas Instruments microcontroller
     18            or used solely and exclusively in conjunction with a Texas Instruments radio
     19            frequency transceiver, which is integrated into your product.  Other than for
     20            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     21            works of, modify, distribute, perform, display or sell this Software and/or
     22            its documentation for any purpose.
     23          
     24            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     25            PROVIDED AS IS?WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
     26            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
     27            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     28            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     29            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     30            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     31            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     32            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     33            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     34            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     35          
     36            Should you have any questions regarding your right to use this Software,
     37            contact Texas Instruments Incorporated at www.TI.com.
     38          **************************************************************************************************/
     39          
     40          
     41          /**************************************************************************************************
     42           *                                            INCLUDES
     43           **************************************************************************************************/
     44          #include "hal_types.h"
     45          #include "OSAL.h"
     46          #include "hal_drivers.h"
     47          
     48          #if (defined HAL_ADC) && (HAL_ADC == TRUE)
     49          #include "hal_adc.h"
     50          #endif
     51          
     52          #include "hal_dma.h"
     53          
     54          #include "hal_flash.h"
     55          
     56          #if (defined HAL_KEY) && (HAL_KEY == TRUE)
     57          #include "hal_key.h"
     58          #endif
     59          
     60          #if (defined HAL_IR) && (HAL_IR == TRUE)
     61            #include "hal_IR.h"

  #ifndef HAL_IR_H
                 ^
"E:\C51RF-CC2530-PKÎÞÏßZIGBEEÍøÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZIGBEE2007_PROÑÝÊ¾²âÊÔ³ÌÐò\TEXAS-INSTRUMENTS\ZSTACK-CC2530-2.2.0-1.3.0\COMPONENTS\HAL\INCLUDE\hal_IR.h",1  Warning[Pa050]: 
          non-native end of line sequence detected (this diagnostic is only
          issued once)
     62          #endif
     63          
     64          #if (defined HAL_LCD) && (HAL_LCD == TRUE)
     65            #include "hal_lcd.h"
     66          #endif
     67          
     68          #if (defined HAL_LED) && (HAL_LED == TRUE)
     69            #include "hal_led.h"
     70          #endif
     71          
     72          #include "hal_timer.h"
     73          
     74          #if (defined HAL_UART) && (HAL_UART == TRUE)
     75          #include "hal_uart.h"
     76          #endif
     77          
     78          #include "hal_sleep.h"
     79          
     80          #if (defined HAL_AES) && (HAL_AES == TRUE)
     81          #include "hal_aes.h"
     82          #endif
     83          
     84          #if (defined HAL_SPI) && (HAL_SPI == TRUE)
     85          #include "hal_spi.h"
     86          #endif
     87          
     88          /**************************************************************************************************
     89           *                                            MACROS
     90           **************************************************************************************************/
     91          
     92          
     93          
     94          /**************************************************************************************************
     95           *                                          CONSTANTS
     96           **************************************************************************************************/
     97          
     98          
     99          /**************************************************************************************************
    100           *                                          TYPEDEFS
    101           **************************************************************************************************/
    102          
    103          
    104          /**************************************************************************************************
    105           *                                      GLOBAL VARIABLES
    106           **************************************************************************************************/

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    107          uint8 Hal_TaskID;
   \                     Hal_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    108          
    109          extern void HalLedUpdate( void ); /* Notes: This for internal only so it shouldn't be in hal_led.h */
    110          
    111          /**************************************************************************************************
    112           *                                      FUNCTIONS - API
    113           **************************************************************************************************/
    114          
    115          /**************************************************************************************************
    116           * @fn      Hal_Init
    117           *
    118           * @brief   Hal Initialization function.
    119           *
    120           * @param   task_id - Hal TaskId
    121           *
    122           * @return  None
    123           **************************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    124          void Hal_Init( uint8 task_id )
   \                     Hal_Init:
    125          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    126            /* Register task ID */
    127            Hal_TaskID = task_id;
   \   000004   E9           MOV     A,R1
   \   000005   90....       MOV     DPTR,#Hal_TaskID
   \   000008   F0           MOVX    @DPTR,A
    128          }
   \   000009                REQUIRE ?Subroutine0
   \   000009                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
    129          
    130          /**************************************************************************************************
    131           * @fn      Hal_DriverInit
    132           *
    133           * @brief   Initialize HW - These need to be initialized before anyone.
    134           *
    135           * @param   task_id - Hal TaskId
    136           *
    137           * @return  None
    138           **************************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    139          void HalDriverInit (void)
   \                     HalDriverInit:
    140          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    141            /* TIMER */
    142          #if (defined HAL_TIMER) && (HAL_TIMER == TRUE)
    143            HalTimerInit();
    144          #endif
    145          
    146            /* ADC */
    147          #if (defined HAL_ADC) && (HAL_ADC == TRUE)
    148            HalAdcInit();
    149          #endif
    150          
    151            /* DMA */
    152          #if (defined HAL_DMA) && (HAL_DMA == TRUE)
    153            // Must be called before the init call to any module that uses DMA.
    154            HalDmaInit();
   \   000004                ; Setup parameters for call to function HalDmaInit
   \   000004   12....       LCALL   ??HalDmaInit?relay
    155          #endif
    156          
    157            /* Flash */
    158          #if (defined HAL_FLASH) && (HAL_FLASH == TRUE)
    159            // Must be called before the init call to any module that uses Flash access or NV.
    160            HalFlashInit();
   \   000007                ; Setup parameters for call to function HalFlashInit
   \   000007   12....       LCALL   ??HalFlashInit?relay
    161          #endif
    162          
    163            /* AES */
    164          #if (defined HAL_AES) && (HAL_AES == TRUE)
    165            HalAesInit();
   \   00000A                ; Setup parameters for call to function HalAesInit
   \   00000A   12....       LCALL   ??HalAesInit?relay
    166          #endif
    167          
    168           
    169            /* LED */
    170          #if (defined HAL_LED) && (HAL_LED == TRUE)
    171            HalLedInit();
   \   00000D                ; Setup parameters for call to function HalLedInit
   \   00000D   12....       LCALL   ??HalLedInit?relay
    172          #endif
    173          
    174            /* UART */
    175          #if (defined HAL_UART) && (HAL_UART == TRUE)
    176            HalUARTInit();
    177          #endif
    178          
    179            /* KEY */
    180          #if (defined HAL_KEY) && (HAL_KEY == TRUE)
    181            HalKeyInit();
    182          #endif
    183          
    184            /* SPI */
    185          #if (defined HAL_SPI) && (HAL_SPI == TRUE)
    186            HalSpiInit();
    187          #endif
    188             /* LCD */
    189          #if (defined HAL_LCD) && (HAL_LCD == TRUE)
    190            HalLcdInit();
    191          #endif
    192          
    193             /* IR_RCVD */
    194          #if (defined HAL_IR) && (HAL_IR == TRUE)
    195           Hal_IR_RCVD_Init();
   \   000010                ; Setup parameters for call to function Hal_IR_RCVD_Init
   \   000010   12....       LCALL   ??Hal_IR_RCVD_Init?relay
    196          #endif
    197          
    198          }
   \   000013   80..         SJMP    ?Subroutine0
    199          
    200          
    201          /**************************************************************************************************
    202           * @fn      Hal_ProcessEvent
    203           *
    204           * @brief   Hal Process Event
    205           *
    206           * @param   task_id - Hal TaskId
    207           *          events - events
    208           *
    209           * @return  None
    210           **************************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    211          uint16 Hal_ProcessEvent( uint8 task_id, uint16 events )
   \                     Hal_ProcessEvent:
    212          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    213            uint8 *msgPtr;
    214            
    215            (void)task_id;  // Intentionally unreferenced parameter
    216          
    217            if ( events & SYS_EVENT_MSG )
   \   000009   7480         MOV     A,#-0x80
   \   00000B   5F           ANL     A,R7
   \   00000C   F9           MOV     R1,A
   \   00000D   E4           CLR     A
   \   00000E   7001         JNZ     ??Hal_ProcessEvent_0
   \   000010   E9           MOV     A,R1
   \                     ??Hal_ProcessEvent_0:
   \   000011   601B         JZ      ??Hal_ProcessEvent_1
    218            {
    219              msgPtr = osal_msg_receive(Hal_TaskID);
   \   000013                ; Setup parameters for call to function osal_msg_receive
   \   000013   8003         SJMP    ??Hal_ProcessEvent_2
    220          
    221              while (msgPtr)
    222              {
    223                /* Do something here - for now, just deallocate the msg and move on */
    224          
    225                /* De-allocate */
    226                osal_msg_deallocate( msgPtr );
   \                     ??Hal_ProcessEvent_3:
   \   000015                ; Setup parameters for call to function osal_msg_deallocate
   \   000015   12....       LCALL   ??osal_msg_deallocate?relay
    227                /* Next */
    228                msgPtr = osal_msg_receive( Hal_TaskID );
   \   000018                ; Setup parameters for call to function osal_msg_receive
   \                     ??Hal_ProcessEvent_2:
   \   000018   90....       MOV     DPTR,#Hal_TaskID
   \   00001B   E0           MOVX    A,@DPTR
   \   00001C   F9           MOV     R1,A
   \   00001D   12....       LCALL   ??osal_msg_receive?relay
    229              }
   \   000020   EA           MOV     A,R2
   \   000021   7001         JNZ     ??Hal_ProcessEvent_4
   \   000023   EB           MOV     A,R3
   \                     ??Hal_ProcessEvent_4:
   \   000024   70EF         JNZ     ??Hal_ProcessEvent_3
    230              return events ^ SYS_EVENT_MSG;
   \   000026   EE           MOV     A,R6
   \   000027   FA           MOV     R2,A
   \   000028   7480         MOV     A,#-0x80
   \   00002A   6F           XRL     A,R7
   \                     ??Hal_ProcessEvent_5:
   \   00002B   FB           MOV     R3,A
   \   00002C   801E         SJMP    ??Hal_ProcessEvent_6
    231            }
    232          
    233            if ( events & HAL_LED_BLINK_EVENT )
   \                     ??Hal_ProcessEvent_1:
   \   00002E   EE           MOV     A,R6
   \   00002F   5402         ANL     A,#0x2
   \   000031   600A         JZ      ??Hal_ProcessEvent_7
    234            {
    235          #if (defined (BLINK_LEDS)) && (HAL_LED == TRUE)
    236              HalLedUpdate();
   \   000033                ; Setup parameters for call to function HalLedUpdate
   \   000033   12....       LCALL   ??HalLedUpdate?relay
    237          #endif /* BLINK_LEDS && HAL_LED */
    238              return events ^ HAL_LED_BLINK_EVENT;
   \   000036   7402         MOV     A,#0x2
   \   000038   6E           XRL     A,R6
   \   000039   FA           MOV     R2,A
   \   00003A   EF           MOV     A,R7
   \   00003B   80EE         SJMP    ??Hal_ProcessEvent_5
    239            }
    240          
    241            if (events & HAL_KEY_EVENT)
   \                     ??Hal_ProcessEvent_7:
   \   00003D   EE           MOV     A,R6
   \   00003E   A2E0         MOV     C,0xE0 /* A   */.0
   \   000040   5006         JNC     ??Hal_ProcessEvent_8
    242            {
    243          
    244          #if (defined HAL_KEY) && (HAL_KEY == TRUE)
    245              /* Check for keys */
    246              HalKeyPoll();
    247          
    248              /* if interrupt disabled, do next polling */
    249              if (!Hal_KeyIntEnable)
    250              {
    251                osal_start_timerEx( Hal_TaskID, HAL_KEY_EVENT, 100);
    252              }
    253          #endif // HAL_KEY
    254          
    255              return events ^ HAL_KEY_EVENT;
   \   000042   7401         MOV     A,#0x1
   \   000044   6E           XRL     A,R6
   \   000045   FA           MOV     R2,A
   \   000046   8004         SJMP    ??Hal_ProcessEvent_6
    256            }
    257          
    258          #ifdef POWER_SAVING
    259            if ( events & HAL_SLEEP_TIMER_EVENT )
    260            {
    261              halRestoreSleepLevel();
    262              return events ^ HAL_SLEEP_TIMER_EVENT;
    263            }
    264          #endif
    265          
    266            /* Nothing interested, discard the message */
    267            return 0;
   \                     ??Hal_ProcessEvent_8:
   \   000048   7A00         MOV     R2,#0x0
   \   00004A   7B00         MOV     R3,#0x0
   \                     ??Hal_ProcessEvent_6:
   \   00004C   7F02         MOV     R7,#0x2
   \   00004E   02....       LJMP    ?BANKED_LEAVE_XDATA
    268          
    269          }
    270          
    271          /**************************************************************************************************
    272           * @fn      Hal_ProcessPoll
    273           *
    274           * @brief   This routine will be called by OSAL to poll UART, TIMER...
    275           *
    276           * @param   task_id - Hal TaskId
    277           *
    278           * @return  None
    279           **************************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    280          void Hal_ProcessPoll ()
   \                     Hal_ProcessPoll:
    281          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    282          
    283            /* Timer Poll */
    284          #if (defined HAL_TIMER) && (HAL_TIMER == TRUE)
    285            HalTimerTick();
    286          #endif
    287          
    288            /* UART Poll */
    289          #if (defined HAL_UART) && (HAL_UART == TRUE)
    290            HalUARTPoll();
    291          #endif
    292          
    293          }
   \   000000   02....       LJMP    ?BRET

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Hal_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Hal_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalDriverInit?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalDriverInit

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Hal_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Hal_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Hal_ProcessPoll?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Hal_ProcessPoll
    294          
    295          
    296          /**************************************************************************************************
    297          **************************************************************************************************/
    298          

   Maximum stack usage in bytes:

     Function                 ISTACK PSTACK XSTACK
     --------                 ------ ------ ------
     HalDriverInit                2      0      0
       -> HalDmaInit              4      0      0
       -> HalFlashInit            4      0      0
       -> HalAesInit              4      0      0
       -> HalLedInit              4      0      0
       -> Hal_IR_RCVD_Init        4      0      0
     Hal_Init                     2      0      0
     Hal_ProcessEvent             0      0     10
       -> osal_msg_receive        0      0     20
       -> osal_msg_deallocate     0      0     20
       -> osal_msg_receive        0      0     20
       -> HalLedUpdate            0      0     20
     Hal_ProcessPoll              0      0      0


   Segment part sizes:

     Function/Label           Bytes
     --------------           -----
     Hal_TaskID                  1
     Hal_Init                    9
     ?Subroutine0                7
     HalDriverInit              21
     Hal_ProcessEvent           81
     Hal_ProcessPoll             3
     ??Hal_Init?relay            6
     ??HalDriverInit?relay       6
     ??Hal_ProcessEvent?relay    6
     ??Hal_ProcessPoll?relay     6

 
 121 bytes in segment BANKED_CODE
  24 bytes in segment BANK_RELAYS
   1 byte  in segment XDATA_Z
 
 145 bytes of CODE  memory
   1 byte  of XDATA memory

Errors: none
Warnings: 1
