###############################################################################
#                                                                             #
# IAR C/C++ Compiler V7.51A/W32 for 8051                07/Nov/2013  18:57:36 #
# Copyright 2004-2009 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  E:\C51RF-CC2530-PKÎÞÏßZigBeeÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007_PROÑÝÊ¾²âÊÔ³ÌÐò\Texas  #
#                          Instruments\ZStack-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\Source\BeginApp.c             #
#    Command line       =  -f "E:\C51RF-CC2530-PKÎÞÏßZigBeeÍøÂç¿ª·¢Æ½Ì¨V1.10\ #
#                          C51RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007_PROÑÝÊ¾²âÊÔ³ÌÐò\Te #
#                          xas Instruments\ZStack-CC2530-2.2.0-1.3.0\Projects #
#                          \zstack\Samples\BeginApp\CC2530DB\..\..\..\Tools\C #
#                          C2530DB\f8wCoord.cfg" (-DCPU32MHZ                  #
#                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRU #
#                          E -DZDO_COORDINATOR -DRTR_NWK -DBLINK_LEDS) -f     #
#                          "E:\C51RF-CC2530-PKÎÞÏßZigBeeÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 #
#                          RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007_PROÑÝÊ¾²âÊÔ³ÌÐò\Texas #
#                           Instruments\ZStack-CC2530-2.2.0-1.3.0\Projects\zs #
#                          tack\Samples\BeginApp\CC2530DB\..\..\..\Tools\CC25 #
#                          30DB\f8wConfig.cfg" (-DSECURE=0                    #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x04000000                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE     #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100) -DREJOIN_POLL_RATE=440   #
#                          "E:\C51RF-CC2530-PKÎÞÏßZigBeeÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 #
#                          RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007_PROÑÝÊ¾²âÊÔ³ÌÐò\Texas #
#                           Instruments\ZStack-CC2530-2.2.0-1.3.0\Projects\zs #
#                          tack\Samples\BeginApp\Source\BeginApp.c" -D        #
#                          ZTOOL_P1 -D MT_TASK -D MT_SYS_FUNC -D MT_ZDO_FUNC  #
#                          -D LCD_SUPPORTED=DEBUG -lC                         #
#                          "E:\C51RF-CC2530-PKÎÞÏßZigBeeÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 #
#                          RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007_PROÑÝÊ¾²âÊÔ³ÌÐò\Texas #
#                           Instruments\ZStack-CC2530-2.2.0-1.3.0\Projects\zs #
#                          tack\Samples\BeginApp\CC2530DB\CoordinatorEB\List\ #
#                          " -lA "E:\C51RF-CC2530-PKÎÞÏßZigBeeÍøÂç¿ª·¢Æ½Ì¨V1. #
#                          10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007_PROÑÝÊ¾²âÊÔ³ÌÐò #
#                          \Texas Instruments\ZStack-CC2530-2.2.0-1.3.0\Proje #
#                          cts\zstack\Samples\BeginApp\CC2530DB\CoordinatorEB #
#                          \List\" --diag_suppress Pe001,Pa010 -o             #
#                          "E:\C51RF-CC2530-PKÎÞÏßZigBeeÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 #
#                          RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007_PROÑÝÊ¾²âÊÔ³ÌÐò\Texas #
#                           Instruments\ZStack-CC2530-2.2.0-1.3.0\Projects\zs #
#                          tack\Samples\BeginApp\CC2530DB\CoordinatorEB\Obj\" #
#                           -e --require_prototypes --debug --core=plain      #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 8 -I "E:\C51RF-CC2530-PKÎÞÏßZigB #
#                          eeÍøÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee200 #
#                          7_PROÑÝÊ¾²âÊÔ³ÌÐò\Texas Instruments\ZStack-CC2530- #
#                          2.2.0-1.3.0\Projects\zstack\Samples\BeginApp\CC253 #
#                          0DB\" -I "E:\C51RF-CC2530-PKÎÞÏßZigBeeÍøÂç¿ª·¢Æ½Ì¨ #
#                          V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007_PROÑÝÊ¾²âÊÔ³ #
#                          ÌÐò\Texas Instruments\ZStack-CC2530-2.2.0-1.3.0\Pr #
#                          ojects\zstack\Samples\BeginApp\CC2530DB\..\SOURCE\ #
#                          " -I "E:\C51RF-CC2530-PKÎÞÏßZigBeeÍøÂç¿ª·¢Æ½Ì¨V1.1 #
#                          0\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007_PROÑÝÊ¾²âÊÔ³ÌÐò\ #
#                          Texas Instruments\ZStack-CC2530-2.2.0-1.3.0\Projec #
#                          ts\zstack\Samples\BeginApp\CC2530DB\..\..\..\ZMAIN #
#                          \TI2530DB\" -I "E:\C51RF-CC2530-PKÎÞÏßZigBeeÍøÂç¿ª #
#                          ·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007_PROÑÝÊ #
#                          ¾²âÊÔ³ÌÐò\Texas Instruments\ZStack-CC2530-2.2.0-1. #
#                          3.0\Projects\zstack\Samples\BeginApp\CC2530DB\..\. #
#                          .\..\..\..\COMPONENTS\MT\" -I                      #
#                          "E:\C51RF-CC2530-PKÎÞÏßZigBeeÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 #
#                          RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007_PROÑÝÊ¾²âÊÔ³ÌÐò\Texas #
#                           Instruments\ZStack-CC2530-2.2.0-1.3.0\Projects\zs #
#                          tack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\HAL\INCLUDE\" -I "E:\C51RF-CC2530-PKÎÞÏßZig #
#                          BeeÍøÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee20 #
#                          07_PROÑÝÊ¾²âÊÔ³ÌÐò\Texas                           #
#                          Instruments\ZStack-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\HAL\TARGET\CC2530EB\" -I                     #
#                          "E:\C51RF-CC2530-PKÎÞÏßZigBeeÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 #
#                          RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007_PROÑÝÊ¾²âÊÔ³ÌÐò\Texas #
#                           Instruments\ZStack-CC2530-2.2.0-1.3.0\Projects\zs #
#                          tack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\OSAL\MCU\CCSOC\" -I                         #
#                          "E:\C51RF-CC2530-PKÎÞÏßZigBeeÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 #
#                          RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007_PROÑÝÊ¾²âÊÔ³ÌÐò\Texas #
#                           Instruments\ZStack-CC2530-2.2.0-1.3.0\Projects\zs #
#                          tack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\OSAL\INCLUDE\" -I                           #
#                          "E:\C51RF-CC2530-PKÎÞÏßZigBeeÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 #
#                          RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007_PROÑÝÊ¾²âÊÔ³ÌÐò\Texas #
#                           Instruments\ZStack-CC2530-2.2.0-1.3.0\Projects\zs #
#                          tack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\STACK\AF\" -I "E:\C51RF-CC2530-PKÎÞÏßZigBee #
#                          ÍøÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007_ #
#                          PROÑÝÊ¾²âÊÔ³ÌÐò\Texas Instruments\ZStack-CC2530-2. #
#                          2.0-1.3.0\Projects\zstack\Samples\BeginApp\CC2530D #
#                          B\..\..\..\..\..\COMPONENTS\STACK\NWK\" -I         #
#                          "E:\C51RF-CC2530-PKÎÞÏßZigBeeÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 #
#                          RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007_PROÑÝÊ¾²âÊÔ³ÌÐò\Texas #
#                           Instruments\ZStack-CC2530-2.2.0-1.3.0\Projects\zs #
#                          tack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\STACK\SEC\" -I "E:\C51RF-CC2530-PKÎÞÏßZigBe #
#                          eÍøÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007 #
#                          _PROÑÝÊ¾²âÊÔ³ÌÐò\Texas Instruments\ZStack-CC2530-2 #
#                          .2.0-1.3.0\Projects\zstack\Samples\BeginApp\CC2530 #
#                          DB\..\..\..\..\..\COMPONENTS\STACK\SAPI\" -I       #
#                          "E:\C51RF-CC2530-PKÎÞÏßZigBeeÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 #
#                          RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007_PROÑÝÊ¾²âÊÔ³ÌÐò\Texas #
#                           Instruments\ZStack-CC2530-2.2.0-1.3.0\Projects\zs #
#                          tack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\STACK\SYS\" -I "E:\C51RF-CC2530-PKÎÞÏßZigBe #
#                          eÍøÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007 #
#                          _PROÑÝÊ¾²âÊÔ³ÌÐò\Texas Instruments\ZStack-CC2530-2 #
#                          .2.0-1.3.0\Projects\zstack\Samples\BeginApp\CC2530 #
#                          DB\..\..\..\..\..\COMPONENTS\STACK\ZDO\" -I        #
#                          "E:\C51RF-CC2530-PKÎÞÏßZigBeeÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 #
#                          RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007_PROÑÝÊ¾²âÊÔ³ÌÐò\Texas #
#                           Instruments\ZStack-CC2530-2.2.0-1.3.0\Projects\zs #
#                          tack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\ZMAC\F8W\" -I "E:\C51RF-CC2530-PKÎÞÏßZigBee #
#                          ÍøÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007_ #
#                          PROÑÝÊ¾²âÊÔ³ÌÐò\Texas Instruments\ZStack-CC2530-2. #
#                          2.0-1.3.0\Projects\zstack\Samples\BeginApp\CC2530D #
#                          B\..\..\..\..\..\COMPONENTS\ZMAC\" -I              #
#                          "E:\C51RF-CC2530-PKÎÞÏßZigBeeÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 #
#                          RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007_PROÑÝÊ¾²âÊÔ³ÌÐò\Texas #
#                           Instruments\ZStack-CC2530-2.2.0-1.3.0\Projects\zs #
#                          tack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\SERVICES\SADDR\" -I                         #
#                          "E:\C51RF-CC2530-PKÎÞÏßZigBeeÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 #
#                          RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007_PROÑÝÊ¾²âÊÔ³ÌÐò\Texas #
#                           Instruments\ZStack-CC2530-2.2.0-1.3.0\Projects\zs #
#                          tack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\SERVICES\SDATA\" -I                         #
#                          "E:\C51RF-CC2530-PKÎÞÏßZigBeeÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 #
#                          RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007_PROÑÝÊ¾²âÊÔ³ÌÐò\Texas #
#                           Instruments\ZStack-CC2530-2.2.0-1.3.0\Projects\zs #
#                          tack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\MAC\INCLUDE\" -I "E:\C51RF-CC2530-PKÎÞÏßZig #
#                          BeeÍøÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee20 #
#                          07_PROÑÝÊ¾²âÊÔ³ÌÐò\Texas                           #
#                          Instruments\ZStack-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\MAC\HIGH_LEVEL\" -I                          #
#                          "E:\C51RF-CC2530-PKÎÞÏßZigBeeÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 #
#                          RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007_PROÑÝÊ¾²âÊÔ³ÌÐò\Texas #
#                           Instruments\ZStack-CC2530-2.2.0-1.3.0\Projects\zs #
#                          tack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\MAC\LOW_LEVEL\srf04\" -I                    #
#                          "E:\C51RF-CC2530-PKÎÞÏßZigBeeÍøÂç¿ª·¢Æ½Ì¨V1.10\C51 #
#                          RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007_PROÑÝÊ¾²âÊÔ³ÌÐò\Texas #
#                           Instruments\ZStack-CC2530-2.2.0-1.3.0\Projects\zs #
#                          tack\Samples\BeginApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\MAC\LOW_LEVEL\srf04\SINGLE_CHIP\" -I        #
#                          "C:\Program Files\IAR Systems\Embedded Workbench   #
#                          5.3 Evaluation version\8051\INC\" -I "C:\Program   #
#                          Files\IAR Systems\Embedded Workbench 5.3           #
#                          Evaluation version\8051\INC\CLIB\" -Ohz            #
#    List file          =  E:\C51RF-CC2530-PKÎÞÏßZigBeeÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007_PROÑÝÊ¾²âÊÔ³ÌÐò\Texas  #
#                          Instruments\ZStack-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\CoordinatorEB\List\B #
#                          eginApp.lst                                        #
#    Object file        =  E:\C51RF-CC2530-PKÎÞÏßZigBeeÍøÂç¿ª·¢Æ½Ì¨V1.10\C51R #
#                          F-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007_PROÑÝÊ¾²âÊÔ³ÌÐò\Texas  #
#                          Instruments\ZStack-CC2530-2.2.0-1.3.0\Projects\zst #
#                          ack\Samples\BeginApp\CC2530DB\CoordinatorEB\Obj\Be #
#                          ginApp.r51                                         #
#                                                                             #
#                                                                             #
###############################################################################

E:\C51RF-CC2530-PKÎÞÏßZigBeeÍøÂç¿ª·¢Æ½Ì¨V1.10\C51RF-CC2530ÑÝÊ¾³ÌÐò\ZigBee2007_PROÑÝÊ¾²âÊÔ³ÌÐò\Texas Instruments\ZStack-CC2530-2.2.0-1.3.0\Projects\zstack\Samples\BeginApp\Source\BeginApp.c
      1          /**************************************************************************************************
      2            Filename:       BeginApp.c
      3            Revised:        $Date: 2009-03-18 15:56:27 -0700 (Wed, 18 Mar 2009) $
      4            Revision:       $Revision: 19453 $
      5          
      6            Description:    Begin Application (no Profile).
      7          
      8          
      9            Copyright 2004-2009 Texas Instruments Incorporated. All rights reserved.
     10          
     11            IMPORTANT: Your use of this Software is limited to those specific rights
     12            granted under the terms of a software license agreement between the user
     13            who downloaded the software, his/her employer (which must be your employer)
     14            and Texas Instruments Incorporated (the "License").  You may not use this
     15            Software unless you agree to abide by the terms of the License. The License
     16            limits your use, and you acknowledge, that the Software may not be modified,
     17            copied or distributed unless embedded on a Texas Instruments microcontroller
     18            or used solely and exclusively in conjunction with a Texas Instruments radio
     19            frequency transceiver, which is integrated into your product.  Other than for
     20            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     21            works of, modify, distribute, perform, display or sell this Software and/or
     22            its documentation for any purpose.
     23          
     24            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     25            PROVIDED ?AS IS? WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, 
     26            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE, 
     27            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     28            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     29            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     30            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     31            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     32            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     33            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     34            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     35          
     36            Should you have any questions regarding your right to use this Software,
     37            contact Texas Instruments Incorporated at www.TI.com. 
     38          **************************************************************************************************/
     39          
     40          /*********************************************************************
     41            This application isn't intended to do anything useful, it is
     42            intended to be a simple example of an application's structure.
     43          
     44            This application sends "Hello World" to another "Begin"
     45            application every 15 seconds.  The application will also
     46            receive "Hello World" packets.
     47          
     48            The "Hello World" messages are sent/received as MSG type message.
     49          
     50            This applications doesn't have a profile, so it handles everything
     51            directly - itself.
     52          
     53            Key control:
     54              SW1:
     55              SW2:  initiates end device binding
     56              SW3:
     57              SW4:  initiates a match description request
     58          *********************************************************************/
     59          
     60          /*********************************************************************
     61           * INCLUDES
     62           */
     63          #include "OSAL.h"
     64          #include "AF.h"
     65          #include "ZDApp.h"
     66          #include "ZDObject.h"
     67          #include "ZDProfile.h"
     68          
     69          #include "BeginApp.h"
     70          #include "DebugTrace.h"
     71          
     72          #if !defined( WIN32 )
     73            #include "OnBoard.h"
     74          #endif
     75          
     76          /* HAL */
     77          #include "hal_lcd.h"
     78          #include "hal_led.h"
     79          #include "hal_key.h"
     80          #include "hal_uart.h"
     81          
     82          /*********************************************************************
     83           * MACROS
     84           */
     85          
     86          /*********************************************************************
     87           * CONSTANTS
     88           */
     89          
     90          /*********************************************************************
     91           * TYPEDEFS
     92           */
     93          
     94          /*********************************************************************
     95           * GLOBAL VARIABLES
     96           */
     97          
     98          // This list should be filled with Application specific Cluster IDs.

   \                                 In  segment XDATA_ROM_C, align 1
     99          const cId_t BeginApp_ClusterList[BEGINAPP_MAX_CLUSTERS] =
   \                     BeginApp_ClusterList:
   \   000000   0100         DW 1
    100          {
    101            BEGINAPP_CLUSTERID
    102          };
    103          

   \                                 In  segment XDATA_ROM_C, align 1
    104          const SimpleDescriptionFormat_t BeginApp_SimpleDesc =
   \                     BeginApp_SimpleDesc:
   \   000000   0A           DB 10
   \   000001   040F0100     DW 3844, 1
   \   000005   0001         DB 0, 1
   \   000007   ....         DW BeginApp_ClusterList
   \   000009   01           DB 1
   \   00000A   ....         DW BeginApp_ClusterList
    105          {
    106            BEGINAPP_ENDPOINT,              //  int Endpoint;
    107            BEGINAPP_PROFID,                //  uint16 AppProfId[2];
    108            BEGINAPP_DEVICEID,              //  uint16 AppDeviceId[2];
    109            BEGINAPP_DEVICE_VERSION,        //  int   AppDevVer:4;
    110            BEGINAPP_FLAGS,                 //  int   AppFlags:4;
    111            BEGINAPP_MAX_CLUSTERS,          //  byte  AppNumInClusters;
    112            (cId_t *)BeginApp_ClusterList,  //  byte *pAppInClusterList;
    113            BEGINAPP_MAX_CLUSTERS,          //  byte  AppNumInClusters;
    114            (cId_t *)BeginApp_ClusterList   //  byte *pAppInClusterList;
    115          };
    116          
    117          // This is the Endpoint/Interface description.  It is defined here, but
    118          // filled-in in BeginApp_Init().  Another way to go would be to fill
    119          // in the structure here and make it a "const" (in code space).  The
    120          // way it's defined in this sample app it is define in RAM.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    121          endPointDesc_t BeginApp_epDesc;
   \                     BeginApp_epDesc:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
    122          
    123          /*********************************************************************
    124           * EXTERNAL VARIABLES
    125           */
    126          
    127          /*********************************************************************
    128           * EXTERNAL FUNCTIONS
    129           */
    130          
    131          /*********************************************************************
    132           * LOCAL VARIABLES
    133           */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    134          byte BeginApp_TaskID;   // Task ID for internal task/event processing
   \                     BeginApp_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    135                                    // This variable will be received when
    136                                    // BeginApp_Init() is called.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    137          devStates_t BeginApp_NwkState;
   \                     BeginApp_NwkState:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    138          
    139          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    140          byte BeginApp_TransID;  // This is the unique message ID (counter)
   \                     BeginApp_TransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    141          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    142          afAddrType_t BeginApp_DstAddr;
   \                     BeginApp_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
    143          
    144          /*********************************************************************
    145           * LOCAL FUNCTIONS
    146           */
    147          void BeginApp_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg );
    148          void BeginApp_HandleKeys( byte shift, byte keys );
    149          void BeginApp_MessageMSGCB( afIncomingMSGPacket_t *pckt );
    150          void BeginApp_SendTheMessage( void );
    151          
    152          /*********************************************************************
    153           * NETWORK LAYER CALLBACKS
    154           */
    155          
    156          /*********************************************************************
    157           * PUBLIC FUNCTIONS
    158           */
    159          
    160          /*********************************************************************
    161           * @fn      BeginApp_Init
    162           *
    163           * @brief   Initialization function for the Begin App Task.
    164           *          This is called during initialization and should contain
    165           *          any application specific initialization (ie. hardware
    166           *          initialization/setup, table initialization, power up
    167           *          notificaiton ... ).
    168           *
    169           * @param   task_id - the ID assigned by OSAL.  This ID should be
    170           *                    used to send messages and set timers.
    171           *
    172           * @return  none
    173           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    174          void BeginApp_Init( byte task_id )
   \                     BeginApp_Init:
    175          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    176            BeginApp_TaskID = task_id;
   \   000004   E9           MOV     A,R1
   \   000005   90....       MOV     DPTR,#BeginApp_TaskID
   \   000008   F0           MOVX    @DPTR,A
    177            BeginApp_NwkState = DEV_INIT;
   \   000009   7401         MOV     A,#0x1
   \   00000B   90....       MOV     DPTR,#BeginApp_NwkState
   \   00000E   F0           MOVX    @DPTR,A
    178            BeginApp_TransID = 0;
   \   00000F   E4           CLR     A
   \   000010   90....       MOV     DPTR,#BeginApp_TransID
   \   000013   F0           MOVX    @DPTR,A
    179          
    180            // Device hardware initialization can be added here or in main() (Zmain.c).
    181            // If the hardware is application specific - add it here.
    182            // If the hardware is other parts of the device add it in main().
    183          
    184            BeginApp_DstAddr.addrMode = (afAddrMode_t)AddrNotPresent;
   \   000014   90....       MOV     DPTR,#(BeginApp_DstAddr + 8)
   \   000017   F0           MOVX    @DPTR,A
    185            BeginApp_DstAddr.endPoint = 0;
   \   000018   90....       MOV     DPTR,#(BeginApp_DstAddr + 9)
   \   00001B   F0           MOVX    @DPTR,A
    186            BeginApp_DstAddr.addr.shortAddr = 0;
   \   00001C   90....       MOV     DPTR,#BeginApp_DstAddr
   \   00001F   F0           MOVX    @DPTR,A
   \   000020   A3           INC     DPTR
   \   000021   F0           MOVX    @DPTR,A
    187          
    188            // Fill out the endpoint description.
    189            BeginApp_epDesc.endPoint = BEGINAPP_ENDPOINT;
   \   000022   740A         MOV     A,#0xa
   \   000024   90....       MOV     DPTR,#BeginApp_epDesc
   \   000027   F0           MOVX    @DPTR,A
    190            BeginApp_epDesc.task_id = &BeginApp_TaskID;
   \   000028   90....       MOV     DPTR,#(BeginApp_epDesc + 1)
   \   00002B   74..         MOV     A,#(BeginApp_TaskID & 0xff)
   \   00002D   F0           MOVX    @DPTR,A
   \   00002E   A3           INC     DPTR
   \   00002F   74..         MOV     A,#((BeginApp_TaskID >> 8) & 0xff)
   \   000031   F0           MOVX    @DPTR,A
    191            BeginApp_epDesc.simpleDesc
    192                      = (SimpleDescriptionFormat_t *)&BeginApp_SimpleDesc;
   \   000032   90....       MOV     DPTR,#(BeginApp_epDesc + 3)
   \   000035   74..         MOV     A,#(BeginApp_SimpleDesc & 0xff)
   \   000037   F0           MOVX    @DPTR,A
   \   000038   A3           INC     DPTR
   \   000039   74..         MOV     A,#((BeginApp_SimpleDesc >> 8) & 0xff)
   \   00003B   F0           MOVX    @DPTR,A
    193            BeginApp_epDesc.latencyReq = noLatencyReqs;
   \   00003C   E4           CLR     A
   \   00003D   90....       MOV     DPTR,#(BeginApp_epDesc + 5)
   \   000040   F0           MOVX    @DPTR,A
    194          
    195            // Register the endpoint description with the AF
    196            afRegister( &BeginApp_epDesc );
   \   000041                ; Setup parameters for call to function afRegister
   \   000041   7A..         MOV     R2,#(BeginApp_epDesc & 0xff)
   \   000043   7B..         MOV     R3,#((BeginApp_epDesc >> 8) & 0xff)
   \   000045   12....       LCALL   ??afRegister?relay
    197          
    198            // Register for all key events - This app will handle all key events
    199            RegisterForKeys( BeginApp_TaskID );
   \   000048                ; Setup parameters for call to function RegisterForKeys
   \   000048   90....       MOV     DPTR,#BeginApp_TaskID
   \   00004B   E0           MOVX    A,@DPTR
   \   00004C   F9           MOV     R1,A
   \   00004D   12....       LCALL   ??RegisterForKeys?relay
    200          
    201            // Update the display
    202          #if defined ( LCD_SUPPORTED )
    203              HalLcdWriteString( "BeginApp", HAL_LCD_LINE_1 );
   \   000050                ; Setup parameters for call to function HalLcdWriteString
   \   000050   7901         MOV     R1,#0x1
   \   000052   7A..         MOV     R2,#(`?<Constant "BeginApp">` & 0xff)
   \   000054   7B..         MOV     R3,#((`?<Constant "BeginApp">` >> 8) & 0xff)
   \   000056   12....       LCALL   ??HalLcdWriteString?relay
    204          #endif
    205              
    206            ZDO_RegisterForZDOMsg( BeginApp_TaskID, End_Device_Bind_rsp );
   \   000059                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   000059   7A20         MOV     R2,#0x20
   \   00005B   7B80         MOV     R3,#-0x80
   \   00005D   90....       MOV     DPTR,#BeginApp_TaskID
   \   000060   E0           MOVX    A,@DPTR
   \   000061   F9           MOV     R1,A
   \   000062   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    207            ZDO_RegisterForZDOMsg( BeginApp_TaskID, Match_Desc_rsp );
   \   000065                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   000065   7A06         MOV     R2,#0x6
   \   000067   7B80         MOV     R3,#-0x80
   \   000069   90....       MOV     DPTR,#BeginApp_TaskID
   \   00006C   E0           MOVX    A,@DPTR
   \   00006D   F9           MOV     R1,A
   \   00006E   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    208          }
   \   000071                REQUIRE ?Subroutine0
   \   000071                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
    209          
    210          /*********************************************************************
    211           * @fn      BeginApp_ProcessEvent
    212           *
    213           * @brief   Begin Application Task event processor.  This function
    214           *          is called to process all events for the task.  Events
    215           *          include timers, messages and any other user defined events.
    216           *
    217           * @param   task_id  - The OSAL assigned task ID.
    218           * @param   events - events to process.  This is a bit map and can
    219           *                   contain more than one event.
    220           *
    221           * @return  none
    222           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    223          UINT16 BeginApp_ProcessEvent( byte task_id, UINT16 events )
   \                     BeginApp_ProcessEvent:
    224          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    225            afIncomingMSGPacket_t *MSGpkt;
    226            afDataConfirm_t *afDataConfirm;
    227          
    228            // Data Confirmation message fields
    229            byte sentEP;
    230            ZStatus_t sentStatus;
    231            byte sentTransID;       // This should match the value sent
    232            (void)task_id;  // Intentionally unreferenced parameter
    233          
    234            if ( events & SYS_EVENT_MSG )
   \   000009   7480         MOV     A,#-0x80
   \   00000B   5F           ANL     A,R7
   \   00000C   F9           MOV     R1,A
   \   00000D   E4           CLR     A
   \   00000E   7001         JNZ     ??BeginApp_ProcessEvent_0
   \   000010   E9           MOV     A,R1
   \                     ??BeginApp_ProcessEvent_0:
   \   000011   7003         JNZ     $+5
   \   000013   02....       LJMP    ??BeginApp_ProcessEvent_1 & 0xFFFF
    235            {
    236              MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( BeginApp_TaskID );
   \   000016                ; Setup parameters for call to function osal_msg_receive
   \   000016   8031         SJMP    ??BeginApp_ProcessEvent_2
    237              while ( MSGpkt )
    238              {
    239                switch ( MSGpkt->hdr.event )
    240                {
    241                  case ZDO_CB_MSG:
    242                    BeginApp_ProcessZDOMsgs( (zdoIncomingMsg_t *)MSGpkt );
    243                    break;
    244                    
    245                  case KEY_CHANGE:
    246                    BeginApp_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
    247                    break;
    248          
    249                  case AF_DATA_CONFIRM_CMD:
    250                    // This message is received as a confirmation of a data packet sent.
    251                    // The status is of ZStatus_t type [defined in ZComDef.h]
    252                    // The message fields are defined in AF.h
    253                    afDataConfirm = (afDataConfirm_t *)MSGpkt;
    254                    sentEP = afDataConfirm->endpoint;
    255                    sentStatus = afDataConfirm->hdr.status;
    256                    sentTransID = afDataConfirm->transID;
    257                    (void)sentEP;
    258                    (void)sentTransID;
    259          
    260                    // Action taken when confirmation is received.
    261                    if ( sentStatus != ZSuccess )
    262                    {
    263                      // The data wasn't delivered -- Do something
    264                    }
    265                    break;
    266          
    267                  case AF_INCOMING_MSG_CMD:
    268                    BeginApp_MessageMSGCB( MSGpkt );
    269                    break;
    270          
    271                  case ZDO_STATE_CHANGE:
    272                    BeginApp_NwkState = (devStates_t)(MSGpkt->hdr.status);
   \                     ??BeginApp_ProcessEvent_3:
   \   000018   85..82       MOV     DPL,?V0 + 0
   \   00001B   85..83       MOV     DPH,?V0 + 1
   \   00001E   A3           INC     DPTR
   \   00001F   E0           MOVX    A,@DPTR
   \   000020   90....       MOV     DPTR,#BeginApp_NwkState
   \   000023   F0           MOVX    @DPTR,A
    273                    if ( (BeginApp_NwkState == DEV_ZB_COORD)
    274                        || (BeginApp_NwkState == DEV_ROUTER)
    275                        || (BeginApp_NwkState == DEV_END_DEVICE) )
   \   000024   6409         XRL     A,#0x9
   \   000026   600A         JZ      ??BeginApp_ProcessEvent_4
   \   000028   E0           MOVX    A,@DPTR
   \   000029   6407         XRL     A,#0x7
   \   00002B   6005         JZ      ??BeginApp_ProcessEvent_4
   \   00002D   E0           MOVX    A,@DPTR
   \   00002E   6406         XRL     A,#0x6
   \   000030   7010         JNZ     ??BeginApp_ProcessEvent_5
    276                    {
    277                      // Start sending "the" message in a regular interval.
    278                      osal_start_timerEx( BeginApp_TaskID,
    279                                          BEGINAPP_SEND_MSG_EVT,
    280                                        BEGINAPP_SEND_MSG_TIMEOUT );
   \                     ??BeginApp_ProcessEvent_4:
   \   000032                ; Setup parameters for call to function osal_start_timerEx
   \   000032   7C88         MOV     R4,#-0x78
   \   000034   7D13         MOV     R5,#0x13
   \   000036   7A01         MOV     R2,#0x1
   \   000038   7B00         MOV     R3,#0x0
   \   00003A   90....       MOV     DPTR,#BeginApp_TaskID
   \   00003D   E0           MOVX    A,@DPTR
   \   00003E   F9           MOV     R1,A
   \   00003F   12....       LCALL   ??osal_start_timerEx?relay
    281                    }
    282                    break;
    283          
    284                  default:
    285                    break;
    286                }
    287          
    288                // Release the memory
    289                osal_msg_deallocate( (uint8 *)MSGpkt );
   \                     ??BeginApp_ProcessEvent_5:
   \   000042                ; Setup parameters for call to function osal_msg_deallocate
   \   000042   AA..         MOV     R2,?V0 + 0
   \   000044   AB..         MOV     R3,?V0 + 1
   \   000046   12....       LCALL   ??osal_msg_deallocate?relay
    290          
    291                // Next
    292                MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( BeginApp_TaskID );
   \   000049                ; Setup parameters for call to function osal_msg_receive
   \                     ??BeginApp_ProcessEvent_2:
   \   000049   90....       MOV     DPTR,#BeginApp_TaskID
   \   00004C   E0           MOVX    A,@DPTR
   \   00004D   F9           MOV     R1,A
   \   00004E   12....       LCALL   ??osal_msg_receive?relay
   \   000051   8A..         MOV     ?V0 + 0,R2
   \   000053   8B..         MOV     ?V0 + 1,R3
   \   000055   E5..         MOV     A,?V0 + 0
   \   000057   7002         JNZ     ??BeginApp_ProcessEvent_6
   \   000059   E5..         MOV     A,?V0 + 1
   \                     ??BeginApp_ProcessEvent_6:
   \   00005B   6046         JZ      ??BeginApp_ProcessEvent_7
   \   00005D   85..82       MOV     DPL,?V0 + 0
   \   000060   85..83       MOV     DPH,?V0 + 1
   \   000063   E0           MOVX    A,@DPTR
   \   000064   12....       LCALL   ?UC_SWITCH_SPARSE
   \                     `?<Jumptable for BeginApp_ProcessEvent>_0`:
   \   000067   00           DB        0
   \   000068   04           DB        4
   \   000069   1A           DB        26
   \   00006A   ....         DW        ??BeginApp_ProcessEvent_8
   \   00006C   C0           DB        192
   \   00006D   ....         DW        ??BeginApp_ProcessEvent_9
   \   00006F   D1           DB        209
   \   000070   ....         DW        ??BeginApp_ProcessEvent_3
   \   000072   D3           DB        211
   \   000073   ....         DW        ??BeginApp_ProcessEvent_10
   \   000075   ....         DW        ??BeginApp_ProcessEvent_5
   \                     ??BeginApp_ProcessEvent_10:
   \   000077                ; Setup parameters for call to function BeginApp_ProcessZDOMsgs
   \   000077   AA..         MOV     R2,?V0 + 0
   \   000079   AB..         MOV     R3,?V0 + 1
   \   00007B   12....       LCALL   ??BeginApp_ProcessZDOMsgs?relay
   \   00007E   80C2         SJMP    ??BeginApp_ProcessEvent_5
   \                     ??BeginApp_ProcessEvent_9:
   \   000080                ; Setup parameters for call to function BeginApp_HandleKeys
   \   000080   85..82       MOV     DPL,?V0 + 0
   \   000083   85..83       MOV     DPH,?V0 + 1
   \   000086   A3           INC     DPTR
   \   000087   A3           INC     DPTR
   \   000088   A3           INC     DPTR
   \   000089   E0           MOVX    A,@DPTR
   \   00008A   FA           MOV     R2,A
   \   00008B   85..82       MOV     DPL,?V0 + 0
   \   00008E   85..83       MOV     DPH,?V0 + 1
   \   000091   A3           INC     DPTR
   \   000092   A3           INC     DPTR
   \   000093   E0           MOVX    A,@DPTR
   \   000094   F9           MOV     R1,A
   \   000095   12....       LCALL   ??BeginApp_HandleKeys?relay
   \   000098   80A8         SJMP    ??BeginApp_ProcessEvent_5
   \                     ??BeginApp_ProcessEvent_8:
   \   00009A                ; Setup parameters for call to function BeginApp_MessageMSGCB
   \   00009A   AA..         MOV     R2,?V0 + 0
   \   00009C   AB..         MOV     R3,?V0 + 1
   \   00009E   12....       LCALL   ??BeginApp_MessageMSGCB?relay
   \   0000A1   809F         SJMP    ??BeginApp_ProcessEvent_5
    293              }
    294          
    295              // return unprocessed events
    296              return (events ^ SYS_EVENT_MSG);
   \                     ??BeginApp_ProcessEvent_7:
   \   0000A3   EE           MOV     A,R6
   \   0000A4   FA           MOV     R2,A
   \   0000A5   7480         MOV     A,#-0x80
   \   0000A7   6F           XRL     A,R7
   \                     ??BeginApp_ProcessEvent_11:
   \   0000A8   FB           MOV     R3,A
   \   0000A9   8023         SJMP    ??BeginApp_ProcessEvent_12
    297            }
    298          
    299            // Send a message out - This event is generated by a timer
    300            //  (setup in BeginApp_Init()).
    301            if ( events & BEGINAPP_SEND_MSG_EVT )
   \                     ??BeginApp_ProcessEvent_1:
   \   0000AB   EE           MOV     A,R6
   \   0000AC   A2E0         MOV     C,0xE0 /* A   */.0
   \   0000AE   501A         JNC     ??BeginApp_ProcessEvent_13
    302            {
    303              // Send "the" message
    304              BeginApp_SendTheMessage();
   \   0000B0                ; Setup parameters for call to function BeginApp_SendTheMessage
   \   0000B0   12....       LCALL   ??BeginApp_SendTheMessage?relay
    305          
    306              // Setup to send message again
    307              osal_start_timerEx( BeginApp_TaskID,
    308                                  BEGINAPP_SEND_MSG_EVT,
    309                                BEGINAPP_SEND_MSG_TIMEOUT );
   \   0000B3                ; Setup parameters for call to function osal_start_timerEx
   \   0000B3   7C88         MOV     R4,#-0x78
   \   0000B5   7D13         MOV     R5,#0x13
   \   0000B7   7A01         MOV     R2,#0x1
   \   0000B9   7B00         MOV     R3,#0x0
   \   0000BB   90....       MOV     DPTR,#BeginApp_TaskID
   \   0000BE   E0           MOVX    A,@DPTR
   \   0000BF   F9           MOV     R1,A
   \   0000C0   12....       LCALL   ??osal_start_timerEx?relay
    310          
    311              // return unprocessed events
    312              return (events ^ BEGINAPP_SEND_MSG_EVT);
   \   0000C3   7401         MOV     A,#0x1
   \   0000C5   6E           XRL     A,R6
   \   0000C6   FA           MOV     R2,A
   \   0000C7   EF           MOV     A,R7
   \   0000C8   80DE         SJMP    ??BeginApp_ProcessEvent_11
    313            }
    314          
    315            // Discard unknown events
    316            return 0;
   \                     ??BeginApp_ProcessEvent_13:
   \   0000CA   7A00         MOV     R2,#0x0
   \   0000CC   7B00         MOV     R3,#0x0
   \                     ??BeginApp_ProcessEvent_12:
   \   0000CE                REQUIRE ?Subroutine1
   \   0000CE                ; // Fall through to label ?Subroutine1
    317          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7F04         MOV     R7,#0x4
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    318          
    319          /*********************************************************************
    320           * Event Generation Functions
    321           */
    322          
    323          /*********************************************************************
    324           * @fn      BeginApp_ProcessZDOMsgs()
    325           *
    326           * @brief   Process response messages
    327           *
    328           * @param   none
    329           *
    330           * @return  none
    331           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    332          void BeginApp_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg )
   \                     BeginApp_ProcessZDOMsgs:
    333          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    334            switch ( inMsg->clusterID )
   \   000005   EA           MOV     A,R2
   \   000006   240C         ADD     A,#0xc
   \   000008   F582         MOV     DPL,A
   \   00000A   EB           MOV     A,R3
   \   00000B   3400         ADDC    A,#0x0
   \   00000D   F583         MOV     DPH,A
   \   00000F   E0           MOVX    A,@DPTR
   \   000010   F5..         MOV     ?V0 + 0,A
   \   000012   A3           INC     DPTR
   \   000013   E0           MOVX    A,@DPTR
   \   000014   F5..         MOV     ?V0 + 1,A
   \   000016   78..         MOV     R0,#?V0 + 0
   \   000018   12....       LCALL   ?US_SWITCH_SPARSE
   \                     `?<Jumptable for BeginApp_ProcessZDOMsgs>_0`:
   \   00001B   0000         DW        0
   \   00001D   0200         DW        2
   \   00001F   0680         DW        32774
   \   000021   ....         DW        ??BeginApp_ProcessZDOMsgs_0
   \   000023   2080         DW        32800
   \   000025   ....         DW        ??BeginApp_ProcessZDOMsgs_1
   \   000027   ....         DW        ??BeginApp_ProcessZDOMsgs_2
    335            {
    336              case End_Device_Bind_rsp:
    337                if ( ZDO_ParseBindRsp( inMsg ) == ZSuccess )
   \                     ??BeginApp_ProcessZDOMsgs_1:
   \   000029   EA           MOV     A,R2
   \   00002A   2413         ADD     A,#0x13
   \   00002C   F582         MOV     DPL,A
   \   00002E   EB           MOV     A,R3
   \   00002F   3400         ADDC    A,#0x0
   \   000031   F583         MOV     DPH,A
   \   000033   E0           MOVX    A,@DPTR
   \   000034   F8           MOV     R0,A
   \   000035   A3           INC     DPTR
   \   000036   E0           MOVX    A,@DPTR
   \   000037   F583         MOV     DPH,A
   \   000039   8882         MOV     DPL,R0
   \   00003B   E0           MOVX    A,@DPTR
   \   00003C   7009         JNZ     ??BeginApp_ProcessZDOMsgs_3
    338                {
    339                  // Light LED
    340                  HalLedSet( HAL_LED_4, HAL_LED_MODE_ON );
   \   00003E                ; Setup parameters for call to function HalLedSet
   \   00003E   7A01         MOV     R2,#0x1
   \                     ??BeginApp_ProcessZDOMsgs_4:
   \   000040   7908         MOV     R1,#0x8
   \   000042   12....       LCALL   ??HalLedSet?relay
   \   000045   8055         SJMP    ??BeginApp_ProcessZDOMsgs_2
    341                }
    342          #if defined(BLINK_LEDS)
    343                else
    344                {
    345                  // Flash LED to show failure
    346                  HalLedSet ( HAL_LED_4, HAL_LED_MODE_FLASH );
   \                     ??BeginApp_ProcessZDOMsgs_3:
   \   000047                ; Setup parameters for call to function HalLedSet
   \   000047   7A04         MOV     R2,#0x4
   \   000049   80F5         SJMP    ??BeginApp_ProcessZDOMsgs_4
    347                }
    348          #endif
    349                break;
    350          
    351              case Match_Desc_rsp:
    352                {
    353                  ZDO_ActiveEndpointRsp_t *pRsp = ZDO_ParseEPListRsp( inMsg );
   \                     ??BeginApp_ProcessZDOMsgs_0:
   \   00004B                ; Setup parameters for call to function ZDO_ParseEPListRsp
   \   00004B   12....       LCALL   ??ZDO_ParseEPListRsp?relay
   \   00004E   8A..         MOV     ?V0 + 0,R2
   \   000050   8B..         MOV     ?V0 + 1,R3
   \   000052   AE..         MOV     R6,?V0 + 0
   \   000054   AF..         MOV     R7,?V0 + 1
    354                  if ( pRsp )
   \   000056   EE           MOV     A,R6
   \   000057   7001         JNZ     ??BeginApp_ProcessZDOMsgs_5
   \   000059   EF           MOV     A,R7
   \                     ??BeginApp_ProcessZDOMsgs_5:
   \   00005A   6040         JZ      ??BeginApp_ProcessZDOMsgs_2
    355                  {
    356                    if ( pRsp->status == ZSuccess && pRsp->cnt )
   \   00005C   8E82         MOV     DPL,R6
   \   00005E   8F83         MOV     DPH,R7
   \   000060   E0           MOVX    A,@DPTR
   \   000061   7032         JNZ     ??BeginApp_ProcessZDOMsgs_6
   \   000063   A3           INC     DPTR
   \   000064   A3           INC     DPTR
   \   000065   A3           INC     DPTR
   \   000066   E0           MOVX    A,@DPTR
   \   000067   602C         JZ      ??BeginApp_ProcessZDOMsgs_6
    357                    {
    358                      BeginApp_DstAddr.addrMode = (afAddrMode_t)Addr16Bit;
   \   000069   7402         MOV     A,#0x2
   \   00006B   90....       MOV     DPTR,#(BeginApp_DstAddr + 8)
   \   00006E   F0           MOVX    @DPTR,A
    359                      BeginApp_DstAddr.addr.shortAddr = pRsp->nwkAddr;
   \   00006F   8E82         MOV     DPL,R6
   \   000071   8F83         MOV     DPH,R7
   \   000073   A3           INC     DPTR
   \   000074   E0           MOVX    A,@DPTR
   \   000075   F8           MOV     R0,A
   \   000076   A3           INC     DPTR
   \   000077   E0           MOVX    A,@DPTR
   \   000078   F9           MOV     R1,A
   \   000079   90....       MOV     DPTR,#BeginApp_DstAddr
   \   00007C   E8           MOV     A,R0
   \   00007D   F0           MOVX    @DPTR,A
   \   00007E   A3           INC     DPTR
   \   00007F   E9           MOV     A,R1
   \   000080   F0           MOVX    @DPTR,A
    360                      // Take the first endpoint, Can be changed to search through endpoints
    361                      BeginApp_DstAddr.endPoint = pRsp->epList[0];
   \   000081   8E82         MOV     DPL,R6
   \   000083   8F83         MOV     DPH,R7
   \   000085   A3           INC     DPTR
   \   000086   A3           INC     DPTR
   \   000087   A3           INC     DPTR
   \   000088   A3           INC     DPTR
   \   000089   E0           MOVX    A,@DPTR
   \   00008A   90....       MOV     DPTR,#(BeginApp_DstAddr + 9)
   \   00008D   F0           MOVX    @DPTR,A
    362          
    363                      // Light LED
    364                      HalLedSet( HAL_LED_4, HAL_LED_MODE_ON );
   \   00008E                ; Setup parameters for call to function HalLedSet
   \   00008E   7A01         MOV     R2,#0x1
   \   000090   7908         MOV     R1,#0x8
   \   000092   12....       LCALL   ??HalLedSet?relay
    365                    }
    366                    osal_mem_free( pRsp );
   \                     ??BeginApp_ProcessZDOMsgs_6:
   \   000095                ; Setup parameters for call to function osal_mem_free
   \   000095   EE           MOV     A,R6
   \   000096   FA           MOV     R2,A
   \   000097   EF           MOV     A,R7
   \   000098   FB           MOV     R3,A
   \   000099   12....       LCALL   ??osal_mem_free?relay
    367                  }
    368                }
    369                break;
    370            }
    371          }
   \                     ??BeginApp_ProcessZDOMsgs_2:
   \   00009C                REQUIRE ?Subroutine2
   \   00009C                ; // Fall through to label ?Subroutine2

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    372          
    373          /*********************************************************************
    374           * @fn      BeginApp_HandleKeys
    375           *
    376           * @brief   Handles all key events for this device.
    377           *
    378           * @param   shift - true if in shift/alt.
    379           * @param   keys - bit field for key events. Valid entries:
    380           *                 HAL_KEY_SW_4
    381           *                 HAL_KEY_SW_3
    382           *                 HAL_KEY_SW_2
    383           *                 HAL_KEY_SW_1
    384           *
    385           * @return  none
    386           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    387          void BeginApp_HandleKeys( byte shift, byte keys )
   \                     BeginApp_HandleKeys:
    388          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 9
   \   000005   74F7         MOV     A,#-0x9
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   EA           MOV     A,R2
   \   00000B   FE           MOV     R6,A
    389            zAddrType_t dstAddr;
    390            
    391            // Shift is used to make each button/switch dual purpose.
    392            if ( shift )
   \   00000C   E9           MOV     A,R1
   \   00000D   6003         JZ      $+5
   \   00000F   02....       LJMP    ??BeginApp_HandleKeys_0 & 0xFFFF
    393            {
    394              if ( keys & HAL_KEY_SW_1 )
    395              {
    396              }
    397              if ( keys & HAL_KEY_SW_2 )
    398              {
    399              }
    400              if ( keys & HAL_KEY_SW_3 )
    401              {
    402              }
    403              if ( keys & HAL_KEY_SW_4 )
    404              {
    405              }
    406            }
    407            else
    408            {
    409              if ( keys & HAL_KEY_SW_1 )
    410              {
    411              }
    412          
    413              if ( keys & HAL_KEY_SW_2 )
   \   000012   75....       MOV     ?V0 + 0,#(BeginApp_ClusterList & 0xff)
   \   000015   75....       MOV     ?V0 + 1,#((BeginApp_ClusterList >> 8) & 0xff)
   \   000018   EE           MOV     A,R6
   \   000019   A2E1         MOV     C,0xE0 /* A   */.1
   \   00001B   5064         JNC     ??BeginApp_HandleKeys_1
    414              {
    415                HalLedSet ( HAL_LED_4, HAL_LED_MODE_OFF );
   \   00001D                ; Setup parameters for call to function HalLedSet
   \   00001D   7A00         MOV     R2,#0x0
   \   00001F   7908         MOV     R1,#0x8
   \   000021   12....       LCALL   ??HalLedSet?relay
    416          
    417                // Initiate an End Device Bind Request for the mandatory endpoint
    418                dstAddr.addrMode = Addr16Bit;
   \   000024   7408         MOV     A,#0x8
   \   000026   12....       LCALL   ?XSTACK_DISP0_8
   \   000029   7402         MOV     A,#0x2
   \   00002B   F0           MOVX    @DPTR,A
    419                dstAddr.addr.shortAddr = 0x0000; // Coordinator
   \   00002C   85..82       MOV     DPL,?XSP + 0
   \   00002F   85..83       MOV     DPH,?XSP + 1
   \   000032   E4           CLR     A
   \   000033   F0           MOVX    @DPTR,A
   \   000034   A3           INC     DPTR
   \   000035   F0           MOVX    @DPTR,A
    420                ZDP_EndDeviceBindReq( &dstAddr, NLME_GetShortAddr(), 
    421                                      BeginApp_epDesc.endPoint,
    422                                      BEGINAPP_PROFID,
    423                                      BEGINAPP_MAX_CLUSTERS, (cId_t *)BeginApp_ClusterList,
    424                                      BEGINAPP_MAX_CLUSTERS, (cId_t *)BeginApp_ClusterList,
    425                                      FALSE );
   \   000036                ; Setup parameters for call to function NLME_GetShortAddr
   \   000036   12....       LCALL   ??NLME_GetShortAddr?relay
   \   000039   8A..         MOV     ?V0 + 2,R2
   \   00003B   8B..         MOV     ?V0 + 3,R3
   \   00003D   AC..         MOV     R4,?V0 + 2
   \   00003F   AD..         MOV     R5,?V0 + 3
   \   000041                ; Setup parameters for call to function ZDP_EndDeviceBindReq
   \   000041   75..00       MOV     ?V0 + 2,#0x0
   \   000044   78..         MOV     R0,#?V0 + 2
   \   000046   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000049   78..         MOV     R0,#?V0 + 0
   \   00004B   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00004E   75..01       MOV     ?V0 + 2,#0x1
   \   000051   78..         MOV     R0,#?V0 + 2
   \   000053   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000056   78..         MOV     R0,#?V0 + 0
   \   000058   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00005B   78..         MOV     R0,#?V0 + 2
   \   00005D   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000060   75..04       MOV     ?V0 + 2,#0x4
   \   000063   75..0F       MOV     ?V0 + 3,#0xf
   \   000066   78..         MOV     R0,#?V0 + 2
   \   000068   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00006B   90....       MOV     DPTR,#BeginApp_epDesc
   \   00006E   E0           MOVX    A,@DPTR
   \   00006F   F9           MOV     R1,A
   \   000070   7409         MOV     A,#0x9
   \   000072   12....       LCALL   ?XSTACK_DISP0_8
   \   000075   AA82         MOV     R2,DPL
   \   000077   AB83         MOV     R3,DPH
   \   000079   12....       LCALL   ??ZDP_EndDeviceBindReq?relay
   \   00007C   7409         MOV     A,#0x9
   \   00007E   12....       LCALL   ?DEALLOC_XSTACK8
    426              }
    427          
    428              if ( keys & HAL_KEY_SW_3 )
    429              {
    430              }
    431          
    432              if ( keys & HAL_KEY_SW_4 )
   \                     ??BeginApp_HandleKeys_1:
   \   000081   EE           MOV     A,R6
   \   000082   A2E3         MOV     C,0xE0 /* A   */.3
   \   000084   5056         JNC     ??BeginApp_HandleKeys_0
    433              {
    434                HalLedSet ( HAL_LED_4, HAL_LED_MODE_OFF );
   \   000086                ; Setup parameters for call to function HalLedSet
   \   000086   7A00         MOV     R2,#0x0
   \   000088   7908         MOV     R1,#0x8
   \   00008A   12....       LCALL   ??HalLedSet?relay
    435                // Initiate a Match Description Request (Service Discovery)
    436                dstAddr.addrMode = AddrBroadcast;
   \   00008D   7408         MOV     A,#0x8
   \   00008F   12....       LCALL   ?XSTACK_DISP0_8
   \   000092   740F         MOV     A,#0xf
   \   000094   F0           MOVX    @DPTR,A
    437                dstAddr.addr.shortAddr = NWK_BROADCAST_SHORTADDR;
   \   000095   85..82       MOV     DPL,?XSP + 0
   \   000098   85..83       MOV     DPH,?XSP + 1
   \   00009B   74FF         MOV     A,#-0x1
   \   00009D   F0           MOVX    @DPTR,A
   \   00009E   A3           INC     DPTR
   \   00009F   F0           MOVX    @DPTR,A
    438                ZDP_MatchDescReq( &dstAddr, NWK_BROADCAST_SHORTADDR,
    439                                  BEGINAPP_PROFID,
    440                                  BEGINAPP_MAX_CLUSTERS, (cId_t *)BeginApp_ClusterList,
    441                                  BEGINAPP_MAX_CLUSTERS, (cId_t *)BeginApp_ClusterList,
    442                                  FALSE );
   \   0000A0                ; Setup parameters for call to function ZDP_MatchDescReq
   \   0000A0   75..00       MOV     ?V0 + 2,#0x0
   \   0000A3   78..         MOV     R0,#?V0 + 2
   \   0000A5   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000A8   78..         MOV     R0,#?V0 + 0
   \   0000AA   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000AD   75..01       MOV     ?V0 + 2,#0x1
   \   0000B0   78..         MOV     R0,#?V0 + 2
   \   0000B2   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000B5   78..         MOV     R0,#?V0 + 0
   \   0000B7   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000BA   75..04       MOV     ?V0 + 0,#0x4
   \   0000BD   75..0F       MOV     ?V0 + 1,#0xf
   \   0000C0   78..         MOV     R0,#?V0 + 0
   \   0000C2   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000C5   7901         MOV     R1,#0x1
   \   0000C7   7CFF         MOV     R4,#-0x1
   \   0000C9   7DFF         MOV     R5,#-0x1
   \   0000CB   7408         MOV     A,#0x8
   \   0000CD   12....       LCALL   ?XSTACK_DISP0_8
   \   0000D0   AA82         MOV     R2,DPL
   \   0000D2   AB83         MOV     R3,DPH
   \   0000D4   12....       LCALL   ??ZDP_MatchDescReq?relay
   \   0000D7   7408         MOV     A,#0x8
   \   0000D9   12....       LCALL   ?DEALLOC_XSTACK8
    443              }
    444            }
    445          }
   \                     ??BeginApp_HandleKeys_0:
   \   0000DC   7409         MOV     A,#0x9
   \   0000DE   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000E1   02....       LJMP    ?Subroutine1 & 0xFFFF
    446          
    447          /*********************************************************************
    448           * LOCAL FUNCTIONS
    449           */
    450          
    451          /*********************************************************************
    452           * @fn      BeginApp_MessageMSGCB
    453           *
    454           * @brief   Data message processor callback.  This function processes
    455           *          any incoming data - probably from other devices.  So, based
    456           *          on cluster ID, perform the intended action.
    457           *
    458           * @param   none
    459           *
    460           * @return  none
    461           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    462          void BeginApp_MessageMSGCB( afIncomingMSGPacket_t *pkt )
   \                     BeginApp_MessageMSGCB:
    463          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    464            switch ( pkt->clusterId )
   \   000004   8A82         MOV     DPL,R2
   \   000006   8B83         MOV     DPH,R3
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   A3           INC     DPTR
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   6401         XRL     A,#0x1
   \   00000F   7002         JNZ     ??BeginApp_MessageMSGCB_0
   \   000011   A3           INC     DPTR
   \   000012   E0           MOVX    A,@DPTR
   \                     ??BeginApp_MessageMSGCB_0:
   \   000013   7016         JNZ     ??BeginApp_MessageMSGCB_1
    465            {
    466              case BEGINAPP_CLUSTERID:
    467                // "the" message
    468          #if defined( LCD_SUPPORTED )
    469                HalLcdWriteScreen( (char*)pkt->cmd.Data, "rcvd" );
   \   000015                ; Setup parameters for call to function HalLcdWriteScreen
   \   000015   7C..         MOV     R4,#(`?<Constant "rcvd">` & 0xff)
   \   000017   7D..         MOV     R5,#((`?<Constant "rcvd">` >> 8) & 0xff)
   \   000019   EA           MOV     A,R2
   \   00001A   2421         ADD     A,#0x21
   \   00001C   F582         MOV     DPL,A
   \   00001E   EB           MOV     A,R3
   \   00001F   3400         ADDC    A,#0x0
   \   000021   F583         MOV     DPH,A
   \   000023   E0           MOVX    A,@DPTR
   \   000024   FA           MOV     R2,A
   \   000025   A3           INC     DPTR
   \   000026   E0           MOVX    A,@DPTR
   \   000027   FB           MOV     R3,A
   \   000028   12....       LCALL   ??HalLcdWriteScreen?relay
    470          #elif defined( WIN32 )
    471                WPRINTSTR( pkt->cmd.Data );
    472          #endif
    473                break;
    474            }
    475          }
   \                     ??BeginApp_MessageMSGCB_1:
   \   00002B   02....       LJMP    ?Subroutine0 & 0xFFFF
    476          
    477          /*********************************************************************
    478           * @fn      BeginApp_SendTheMessage
    479           *
    480           * @brief   Send "the" message.
    481           *
    482           * @param   none
    483           *
    484           * @return  none
    485           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    486          void BeginApp_SendTheMessage( void )
   \                     BeginApp_SendTheMessage:
    487          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 12
   \   000005   74F4         MOV     A,#-0xc
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    488            char theMessageData[] = "Hello World";
   \   00000A   85..82       MOV     DPL,?XSP + 0
   \   00000D   85..83       MOV     DPH,?XSP + 1
   \   000010   AC82         MOV     R4,DPL
   \   000012   AD83         MOV     R5,DPH
   \   000014   7583..       MOV     DPH,#((`?<Constant "Hello World">` >> 8) & 0xff)
   \   000017   7582..       MOV     DPL,#(`?<Constant "Hello World">` & 0xff)
   \   00001A   740C         MOV     A,#0xc
   \   00001C   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    489          
    490            if ( AF_DataRequest( &BeginApp_DstAddr, &BeginApp_epDesc,
    491                                 BEGINAPP_CLUSTERID,
    492                                 (byte)osal_strlen( theMessageData ) + 1,
    493                                 (byte *)&theMessageData,
    494                                 &BeginApp_TransID,
    495                                 AF_DISCV_ROUTE, AF_DEFAULT_RADIUS ) == afStatus_SUCCESS )
   \   00001F                ; Setup parameters for call to function AF_DataRequest
   \   00001F   75..1E       MOV     ?V0 + 0,#0x1e
   \   000022   78..         MOV     R0,#?V0 + 0
   \   000024   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000027   75....       MOV     ?V0 + 0,#(BeginApp_TransID & 0xff)
   \   00002A   75....       MOV     ?V0 + 1,#((BeginApp_TransID >> 8) & 0xff)
   \   00002D   78..         MOV     R0,#?V0 + 0
   \   00002F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000032   7403         MOV     A,#0x3
   \   000034   12....       LCALL   ?XSTACK_DISP0_8
   \   000037   8582..       MOV     ?V0 + 0,DPL
   \   00003A   8583..       MOV     ?V0 + 1,DPH
   \   00003D   78..         MOV     R0,#?V0 + 0
   \   00003F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000042                ; Setup parameters for call to function osal_strlen
   \   000042   7405         MOV     A,#0x5
   \   000044   12....       LCALL   ?XSTACK_DISP0_8
   \   000047   AA82         MOV     R2,DPL
   \   000049   AB83         MOV     R3,DPH
   \   00004B   12....       LCALL   ??osal_strlen?relay
   \   00004E   EA           MOV     A,R2
   \   00004F   F8           MOV     R0,A
   \   000050   7401         MOV     A,#0x1
   \   000052   28           ADD     A,R0
   \   000053   F5..         MOV     ?V0 + 0,A
   \   000055   E4           CLR     A
   \   000056   3400         ADDC    A,#0x0
   \   000058   F5..         MOV     ?V0 + 1,A
   \   00005A   78..         MOV     R0,#?V0 + 0
   \   00005C   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00005F   75..01       MOV     ?V0 + 0,#0x1
   \   000062   75..00       MOV     ?V0 + 1,#0x0
   \   000065   78..         MOV     R0,#?V0 + 0
   \   000067   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00006A   7920         MOV     R1,#0x20
   \   00006C   7C..         MOV     R4,#(BeginApp_epDesc & 0xff)
   \   00006E   7D..         MOV     R5,#((BeginApp_epDesc >> 8) & 0xff)
   \   000070   7A..         MOV     R2,#(BeginApp_DstAddr & 0xff)
   \   000072   7B..         MOV     R3,#((BeginApp_DstAddr >> 8) & 0xff)
   \   000074   12....       LCALL   ??AF_DataRequest?relay
   \   000077   7409         MOV     A,#0x9
   \   000079   12....       LCALL   ?DEALLOC_XSTACK8
    496            {
    497              // Successfully requested to be sent.
    498            }
    499            else
    500            {
    501              // Error occurred in request to send.
    502            }
    503          }
   \   00007C   740C         MOV     A,#0xc
   \   00007E   12....       LCALL   ?DEALLOC_XSTACK8
   \   000081   02....       LJMP    ?Subroutine2 & 0xFFFF

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??BeginApp_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    BeginApp_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??BeginApp_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    BeginApp_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??BeginApp_ProcessZDOMsgs?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    BeginApp_ProcessZDOMsgs

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??BeginApp_HandleKeys?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    BeginApp_HandleKeys

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??BeginApp_MessageMSGCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    BeginApp_MessageMSGCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??BeginApp_SendTheMessage?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    BeginApp_SendTheMessage

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "BeginApp">`:
   \   000000   42656769     DB "BeginApp"
   \            6E417070
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "rcvd">`:
   \   000000   72637664     DB "rcvd"
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Hello World">`:
   \   000000   48656C6C     DB "Hello World"
   \            6F20576F
   \            726C6400
    504          
    505          /*********************************************************************
    506          *********************************************************************/

   Maximum stack usage in bytes:

     Function                     ISTACK PSTACK XSTACK
     --------                     ------ ------ ------
     BeginApp_HandleKeys              1      0     42
       -> HalLedSet                   0      0     42
       -> NLME_GetShortAddr           0      0     42
       -> ZDP_EndDeviceBindReq        0      0     60
       -> HalLedSet                   0      0     42
       -> ZDP_MatchDescReq            0      0     58
     BeginApp_Init                    2      0      0
       -> afRegister                  4      0      0
       -> RegisterForKeys             4      0      0
       -> HalLcdWriteString           4      0      0
       -> ZDO_RegisterForZDOMsg       4      0      0
       -> ZDO_RegisterForZDOMsg       4      0      0
     BeginApp_MessageMSGCB            2      0     12
       -> HalLcdWriteScreen           4      0      0
     BeginApp_ProcessEvent            0      0     12
       -> osal_msg_receive            0      0     24
       -> osal_start_timerEx          0      0     24
       -> osal_msg_deallocate         0      0     24
       -> osal_msg_receive            0      0     24
       -> BeginApp_ProcessZDOMsgs     0      0     24
       -> BeginApp_HandleKeys         0      0     24
       -> BeginApp_MessageMSGCB       0      0     24
       -> BeginApp_SendTheMessage     0      0     24
       -> osal_start_timerEx          0      0     24
     BeginApp_ProcessZDOMsgs          0      0     22
       -> HalLedSet                   0      0     20
       -> HalLedSet                   0      0     20
       -> ZDO_ParseEPListRsp          0      0     20
       -> HalLedSet                   0      0     20
       -> osal_mem_free               0      0     20
     BeginApp_SendTheMessage          2      0     43
       -> osal_strlen                 0      0     54
       -> AF_DataRequest              0      0     62


   Segment part sizes:

     Function/Label                  Bytes
     --------------                  -----
     BeginApp_ClusterList               2
     BeginApp_SimpleDesc               12
     BeginApp_epDesc                    6
     BeginApp_TaskID                    1
     BeginApp_NwkState                  1
     BeginApp_TransID                   1
     BeginApp_DstAddr                  12
     BeginApp_Init                    113
     ?Subroutine0                       7
     BeginApp_ProcessEvent            206
     ?Subroutine1                       5
     BeginApp_ProcessZDOMsgs          156
     ?Subroutine2                       5
     BeginApp_HandleKeys              228
     BeginApp_MessageMSGCB             46
     BeginApp_SendTheMessage          132
     ??BeginApp_Init?relay              6
     ??BeginApp_ProcessEvent?relay      6
     ??BeginApp_ProcessZDOMsgs?relay    6
     ??BeginApp_HandleKeys?relay        6
     ??BeginApp_MessageMSGCB?relay      6
     ??BeginApp_SendTheMessage?relay    6
     ?<Constant "BeginApp">             9
     ?<Constant "rcvd">                 5
     ?<Constant "Hello World">         12

 
 898 bytes in segment BANKED_CODE
  36 bytes in segment BANK_RELAYS
  40 bytes in segment XDATA_ROM_C
  21 bytes in segment XDATA_Z
 
 934 bytes of CODE  memory
  40 bytes of CONST memory
  21 bytes of XDATA memory

Errors: none
Warnings: none
